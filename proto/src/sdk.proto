/**
 * *****************************************************************************
 * @file        sdk.proto
 * @brief       sdk related agreements
 * @author  ()
 * @date        2023-09-27
 * @copyright   don
 * *****************************************************************************
 */


syntax = "proto3";

import "ca_protomsg.proto";

//SDK send addr
message GetSDKReq
{
    string   version        = 1; //version
    repeated string address = 2; //Account address
    string toaddr           = 3; //to address
    uint64 time             = 4; //time
    uint64 type             = 5; //type
}

//SDK send utxo 
message SDKUtxo
{
	string address = 1; // address
    string hash    = 2; // utxo hash
    uint64 value   = 3; // utxo value
    uint32 n       = 4; // utxo n
}

//SDK sned bonus amout
message SDKBonusamout
{
    string address       = 1; //address
    uint64 invest_amount = 2; //invest amount
}

//SDK send bonus transaction
message SDKBonusTx
{
    string address = 1; //address
    string utxo    = 2; //utxo
    bytes tx       = 3; //transaction 
}

//SDK send pledge transaction
message SDKPledgeTx
{
    string address = 1; //address
    bytes utxo     = 2; //utxo
    bytes tx       = 3; //transaction 
}

//Claimtx
message Claimtx
{
    string address = 1; //address
    string utxo    = 2; //utxo
    bytes  tx      = 3; //transaction 
}

//bnormal addr
message AbnormalAddrCnt
{
    string address = 1; //address
    uint64 count   = 2; //count
}

//send bonus transaction
message SDKClaimBonusTx
{
    string address = 1; //address
    string utxo    = 2; //utxo
    bytes tx       = 3; //transaction   
}

//node
message SDKNodeInfo 
{
  bytes pub         = 1;    //pub
  bytes sign        = 2;    //sign
  bytes identity    = 3;    //identity
  string addr = 4;    //addr
  string public_addr = 5; //public addr
  string name	    = 6;    //name
  string logo	    = 7;    //logo
  uint32 listen_ip  = 8;    //listen ip
  uint32 listen_port= 9;    //listen port
  uint32 public_ip  = 10;   //ip
  uint32 public_port= 11;   //port   
  uint32 height     = 12;   //height
  uint64 time_stamp = 13;   //time stamp
  string version    = 14;   //version
}

//SDK send message
message GetSDKAck
{

    string version      = 1; //version
    int32 code          = 2; //Error code
    string message      = 3; //Returns an error message
    uint64 height       = 4;  
    repeated SDKUtxo utxos    = 5; 
    repeated bytes    blocks  = 6;
   // repeated CBlock  blocks = 6;    //checkTxTimeOut
    repeated SDKBonusamout bonusamount  = 8;  //VerifyBonusAddr
    repeated SDKPledgeTx pledgetx       = 9;  //ca_algorithm::GetPledgeTimeByAddr
    repeated string pledgeaddr          = 10; //IsQualifiedToUnstake
    repeated string pledgeutxo          = 11; //IsQualifiedToUnstake
    repeated string BonusAddr           = 12; //CheckInvestQualification
    repeated string InvestedAddr        = 13; //CheckInvestQualification
    repeated SDKBonusTx  BonusTx        = 14;   //IsQualifiedToDisinvest
    repeated string  BonusAddrInvestUtxos = 15; //IsQualifiedToDisinvest
    repeated Claimtx claimtx            = 16;   //CreateBonusTransaction
    repeated  AbnormalAddrCnt  abnormaladdr_cnt= 17;
    uint64   M2 = 18;
    uint64  Totalinvest = 19;
    uint64  TotalAwardAmount = 20;
    repeated  SDKNodeInfo   nodeinfo = 22; 
    uint64  type = 23;
    repeated SDKClaimBonusTx  ClaimBonusTx = 24;//CreateBonusTransaction
    repeated string ClaimInvestedAddr = 26;     //CalcBonusValue
    repeated string  ClaimBonusAddrInvestUtxos = 27;  //CalcBonusValue
}





//SDK get normal
message SDKNormalTransactionReq
{
    string          version = 1; // version
    repeated string address = 2; //Account address
}

//SDK send normal transaction
message SDKNormalTransactionAck
{
    string version      = 1; //version
    int32 code          = 2; //Error code
    string message      = 3; //Returns an error message
    uint64 height       = 4; 
    repeated SDKUtxo utxos = 5;    //utxo All UTXOs under the account FindUtxo
    repeated bytes  blocks = 6;    //checkTxTimeOut
    repeated SDKBonusamout bonusamount = 7;  //VerifyBonusAddr
    repeated SDKPledgeTx pledgetx = 8;       //ca_algorithm::GetPledgeTimeByAddr
    repeated string pledgeaddr = 9;          //IsQualifiedToUnstake
    repeated string pledgeutxo = 10;         //IsQualifiedToUnstake
    repeated  SDKNodeInfo   nodeinfo = 11; 
}
//-----------------------------------------------------------------------//



//agent type
enum vrfAgentType
{
    vrfAgentType_defalut = 0; 
    vrfAgentType_vrf  = 1;
    vrfAgentType_local = 2;
    vrfAgentType_unknow =3;
};

//Contract deploy
message SDKContractDeployReq
{
    string   version = 1;       //version
    string   address = 2;       //Account address
    string   deploy_amount = 3; //deploy amount
    int32    nContractType = 4; //contract type
    string  pubStr = 5;
}

//Contract deploy
message SDKContractDeployAck
{
   
    string version = 1; //version
    int32 code = 2;     //Error code
    string message = 3; //Returns an error message
    bytes tx = 4;       //transaction
    uint64  top = 5;    //top
    uint64  ip  = 6;    //ip
    uint64  port = 7;   //port
    vrfAgentType isNeedAgent_flag = 8;
    Vrf      vrfInfo              = 9;
}

//SDK get contract
message SDKContractCallReq
{
    string   version = 1;        //version
    string   fromaddr = 2;       //Account address
    string   toaddr = 3;         // toaddr
    uint64   deploy_strTxHash = 4;  //deploy strTxHash
}

//SDK send contract
message SDKContractCallAck
{
    string version = 1; //version
    int32 code = 2;     //Error code
    string message = 3; //Returns an error message
    bytes tx = 4;       //transaction
    uint64  top = 5;    //top height
    uint64  ip  = 6;    //ip
    uint64  port = 7;   //port
    vrfAgentType isNeedAgent_flag = 8;
    Vrf      vrfInfo              = 9;
}