// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sync_block.proto

#include "sync_block.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR FastSyncGetHashReq::FastSyncGetHashReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.start_height_)*/uint64_t{0u}
  , /*decltype(_impl_.end_height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FastSyncGetHashReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FastSyncGetHashReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FastSyncGetHashReqDefaultTypeInternal() {}
  union {
    FastSyncGetHashReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FastSyncGetHashReqDefaultTypeInternal _FastSyncGetHashReq_default_instance_;
PROTOBUF_CONSTEXPR FastSyncBlockHashs::FastSyncBlockHashs(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hashs_)*/{}
  , /*decltype(_impl_.height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FastSyncBlockHashsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FastSyncBlockHashsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FastSyncBlockHashsDefaultTypeInternal() {}
  union {
    FastSyncBlockHashs _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FastSyncBlockHashsDefaultTypeInternal _FastSyncBlockHashs_default_instance_;
PROTOBUF_CONSTEXPR FastSyncGetHashAck::FastSyncGetHashAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hashs_)*/{}
  , /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.node_block_height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FastSyncGetHashAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FastSyncGetHashAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FastSyncGetHashAckDefaultTypeInternal() {}
  union {
    FastSyncGetHashAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FastSyncGetHashAckDefaultTypeInternal _FastSyncGetHashAck_default_instance_;
PROTOBUF_CONSTEXPR FastSyncGetBlockReq::FastSyncGetBlockReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hashs_)*/{}
  , /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FastSyncGetBlockReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FastSyncGetBlockReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FastSyncGetBlockReqDefaultTypeInternal() {}
  union {
    FastSyncGetBlockReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FastSyncGetBlockReqDefaultTypeInternal _FastSyncGetBlockReq_default_instance_;
PROTOBUF_CONSTEXPR FastSyncBlock::FastSyncBlock(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.blocks_)*/{}
  , /*decltype(_impl_.height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FastSyncBlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FastSyncBlockDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FastSyncBlockDefaultTypeInternal() {}
  union {
    FastSyncBlock _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FastSyncBlockDefaultTypeInternal _FastSyncBlock_default_instance_;
PROTOBUF_CONSTEXPR FastSyncGetBlockAck::FastSyncGetBlockAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.blocks_)*/{}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FastSyncGetBlockAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FastSyncGetBlockAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FastSyncGetBlockAckDefaultTypeInternal() {}
  union {
    FastSyncGetBlockAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FastSyncGetBlockAckDefaultTypeInternal _FastSyncGetBlockAck_default_instance_;
PROTOBUF_CONSTEXPR SyncGetSumHashReq::SyncGetSumHashReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.start_height_)*/uint64_t{0u}
  , /*decltype(_impl_.end_height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncGetSumHashReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncGetSumHashReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncGetSumHashReqDefaultTypeInternal() {}
  union {
    SyncGetSumHashReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncGetSumHashReqDefaultTypeInternal _SyncGetSumHashReq_default_instance_;
PROTOBUF_CONSTEXPR SyncSumHash::SyncSumHash(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hash_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.start_height_)*/uint64_t{0u}
  , /*decltype(_impl_.end_height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncSumHashDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncSumHashDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncSumHashDefaultTypeInternal() {}
  union {
    SyncSumHash _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncSumHashDefaultTypeInternal _SyncSumHash_default_instance_;
PROTOBUF_CONSTEXPR SyncGetSumHashAck::SyncGetSumHashAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sync_sum_hashes_)*/{}
  , /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.node_block_height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncGetSumHashAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncGetSumHashAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncGetSumHashAckDefaultTypeInternal() {}
  union {
    SyncGetSumHashAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncGetSumHashAckDefaultTypeInternal _SyncGetSumHashAck_default_instance_;
PROTOBUF_CONSTEXPR SyncGetHeightHashReq::SyncGetHeightHashReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.start_height_)*/uint64_t{0u}
  , /*decltype(_impl_.end_height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncGetHeightHashReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncGetHeightHashReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncGetHeightHashReqDefaultTypeInternal() {}
  union {
    SyncGetHeightHashReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncGetHeightHashReqDefaultTypeInternal _SyncGetHeightHashReq_default_instance_;
PROTOBUF_CONSTEXPR SyncGetHeightHashAck::SyncGetHeightHashAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.block_hashes_)*/{}
  , /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.code_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncGetHeightHashAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncGetHeightHashAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncGetHeightHashAckDefaultTypeInternal() {}
  union {
    SyncGetHeightHashAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncGetHeightHashAckDefaultTypeInternal _SyncGetHeightHashAck_default_instance_;
PROTOBUF_CONSTEXPR SyncGetBlockReq::SyncGetBlockReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.block_hashes_)*/{}
  , /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncGetBlockReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncGetBlockReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncGetBlockReqDefaultTypeInternal() {}
  union {
    SyncGetBlockReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncGetBlockReqDefaultTypeInternal _SyncGetBlockReq_default_instance_;
PROTOBUF_CONSTEXPR SyncGetBlockAck::SyncGetBlockAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.blocks_)*/{}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncGetBlockAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncGetBlockAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncGetBlockAckDefaultTypeInternal() {}
  union {
    SyncGetBlockAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncGetBlockAckDefaultTypeInternal _SyncGetBlockAck_default_instance_;
PROTOBUF_CONSTEXPR SyncFromZeroSumHash::SyncFromZeroSumHash(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hash_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncFromZeroSumHashDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncFromZeroSumHashDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncFromZeroSumHashDefaultTypeInternal() {}
  union {
    SyncFromZeroSumHash _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncFromZeroSumHashDefaultTypeInternal _SyncFromZeroSumHash_default_instance_;
PROTOBUF_CONSTEXPR SyncFromZeroGetSumHashReq::SyncFromZeroGetSumHashReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.heights_)*/{}
  , /*decltype(_impl_._heights_cached_byte_size_)*/{0}
  , /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncFromZeroGetSumHashReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncFromZeroGetSumHashReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncFromZeroGetSumHashReqDefaultTypeInternal() {}
  union {
    SyncFromZeroGetSumHashReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncFromZeroGetSumHashReqDefaultTypeInternal _SyncFromZeroGetSumHashReq_default_instance_;
PROTOBUF_CONSTEXPR SyncFromZeroGetSumHashAck::SyncFromZeroGetSumHashAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.sum_hashes_)*/{}
  , /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.code_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncFromZeroGetSumHashAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncFromZeroGetSumHashAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncFromZeroGetSumHashAckDefaultTypeInternal() {}
  union {
    SyncFromZeroGetSumHashAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncFromZeroGetSumHashAckDefaultTypeInternal _SyncFromZeroGetSumHashAck_default_instance_;
PROTOBUF_CONSTEXPR SyncFromZeroGetBlockReq::SyncFromZeroGetBlockReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncFromZeroGetBlockReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncFromZeroGetBlockReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncFromZeroGetBlockReqDefaultTypeInternal() {}
  union {
    SyncFromZeroGetBlockReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncFromZeroGetBlockReqDefaultTypeInternal _SyncFromZeroGetBlockReq_default_instance_;
PROTOBUF_CONSTEXPR SyncFromZeroGetBlockAck::SyncFromZeroGetBlockAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.blocks_)*/{}
  , /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncFromZeroGetBlockAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncFromZeroGetBlockAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncFromZeroGetBlockAckDefaultTypeInternal() {}
  union {
    SyncFromZeroGetBlockAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncFromZeroGetBlockAckDefaultTypeInternal _SyncFromZeroGetBlockAck_default_instance_;
PROTOBUF_CONSTEXPR GetBlockByUtxoReq::GetBlockByUtxoReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.addr_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.utxo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBlockByUtxoReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlockByUtxoReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlockByUtxoReqDefaultTypeInternal() {}
  union {
    GetBlockByUtxoReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlockByUtxoReqDefaultTypeInternal _GetBlockByUtxoReq_default_instance_;
PROTOBUF_CONSTEXPR GetBlockByUtxoAck::GetBlockByUtxoAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.addr_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.utxo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.block_raw_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBlockByUtxoAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlockByUtxoAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlockByUtxoAckDefaultTypeInternal() {}
  union {
    GetBlockByUtxoAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlockByUtxoAckDefaultTypeInternal _GetBlockByUtxoAck_default_instance_;
PROTOBUF_CONSTEXPR HashType::HashType(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hash_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.block_raw_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.tx_or_block_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HashTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HashTypeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HashTypeDefaultTypeInternal() {}
  union {
    HashType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HashTypeDefaultTypeInternal _HashType_default_instance_;
PROTOBUF_CONSTEXPR GetBlockByHashReq::GetBlockByHashReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.missinghashs_)*/{}
  , /*decltype(_impl_.addr_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBlockByHashReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlockByHashReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlockByHashReqDefaultTypeInternal() {}
  union {
    GetBlockByHashReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlockByHashReqDefaultTypeInternal _GetBlockByHashReq_default_instance_;
PROTOBUF_CONSTEXPR GetBlockByHashAck::GetBlockByHashAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.blocks_)*/{}
  , /*decltype(_impl_.addr_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetBlockByHashAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetBlockByHashAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetBlockByHashAckDefaultTypeInternal() {}
  union {
    GetBlockByHashAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetBlockByHashAckDefaultTypeInternal _GetBlockByHashAck_default_instance_;
PROTOBUF_CONSTEXPR SyncNodeHashReq::SyncNodeHashReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncNodeHashReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncNodeHashReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncNodeHashReqDefaultTypeInternal() {}
  union {
    SyncNodeHashReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncNodeHashReqDefaultTypeInternal _SyncNodeHashReq_default_instance_;
PROTOBUF_CONSTEXPR SyncNodeHashAck::SyncNodeHashAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.hash_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SyncNodeHashAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncNodeHashAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncNodeHashAckDefaultTypeInternal() {}
  union {
    SyncNodeHashAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncNodeHashAckDefaultTypeInternal _SyncNodeHashAck_default_instance_;
PROTOBUF_CONSTEXPR GetCheckSumHashReq::GetCheckSumHashReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.height_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCheckSumHashReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCheckSumHashReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCheckSumHashReqDefaultTypeInternal() {}
  union {
    GetCheckSumHashReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCheckSumHashReqDefaultTypeInternal _GetCheckSumHashReq_default_instance_;
PROTOBUF_CONSTEXPR GetCheckSumHashAck::GetCheckSumHashAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.hash_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.self_node_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.height_)*/uint64_t{0u}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCheckSumHashAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCheckSumHashAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCheckSumHashAckDefaultTypeInternal() {}
  union {
    GetCheckSumHashAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCheckSumHashAckDefaultTypeInternal _GetCheckSumHashAck_default_instance_;
static ::_pb::Metadata file_level_metadata_sync_5fblock_2eproto[27];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_sync_5fblock_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_sync_5fblock_2eproto = nullptr;

const uint32_t TableStruct_sync_5fblock_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FastSyncGetHashReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::FastSyncGetHashReq, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::FastSyncGetHashReq, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::FastSyncGetHashReq, _impl_.start_height_),
  PROTOBUF_FIELD_OFFSET(::FastSyncGetHashReq, _impl_.end_height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FastSyncBlockHashs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::FastSyncBlockHashs, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::FastSyncBlockHashs, _impl_.hashs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FastSyncGetHashAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::FastSyncGetHashAck, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::FastSyncGetHashAck, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::FastSyncGetHashAck, _impl_.node_block_height_),
  PROTOBUF_FIELD_OFFSET(::FastSyncGetHashAck, _impl_.hashs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FastSyncGetBlockReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::FastSyncGetBlockReq, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::FastSyncGetBlockReq, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::FastSyncGetBlockReq, _impl_.hashs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FastSyncBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::FastSyncBlock, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::FastSyncBlock, _impl_.blocks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FastSyncGetBlockAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::FastSyncGetBlockAck, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::FastSyncGetBlockAck, _impl_.blocks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncGetSumHashReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncGetSumHashReq, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::SyncGetSumHashReq, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::SyncGetSumHashReq, _impl_.start_height_),
  PROTOBUF_FIELD_OFFSET(::SyncGetSumHashReq, _impl_.end_height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncSumHash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncSumHash, _impl_.start_height_),
  PROTOBUF_FIELD_OFFSET(::SyncSumHash, _impl_.end_height_),
  PROTOBUF_FIELD_OFFSET(::SyncSumHash, _impl_.hash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncGetSumHashAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncGetSumHashAck, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::SyncGetSumHashAck, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::SyncGetSumHashAck, _impl_.node_block_height_),
  PROTOBUF_FIELD_OFFSET(::SyncGetSumHashAck, _impl_.sync_sum_hashes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncGetHeightHashReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncGetHeightHashReq, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::SyncGetHeightHashReq, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::SyncGetHeightHashReq, _impl_.start_height_),
  PROTOBUF_FIELD_OFFSET(::SyncGetHeightHashReq, _impl_.end_height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncGetHeightHashAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncGetHeightHashAck, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::SyncGetHeightHashAck, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::SyncGetHeightHashAck, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::SyncGetHeightHashAck, _impl_.block_hashes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncGetBlockReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncGetBlockReq, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::SyncGetBlockReq, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::SyncGetBlockReq, _impl_.block_hashes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncGetBlockAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncGetBlockAck, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::SyncGetBlockAck, _impl_.blocks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroSumHash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroSumHash, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroSumHash, _impl_.hash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetSumHashReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetSumHashReq, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetSumHashReq, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetSumHashReq, _impl_.heights_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetSumHashAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetSumHashAck, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetSumHashAck, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetSumHashAck, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetSumHashAck, _impl_.sum_hashes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetBlockReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetBlockReq, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetBlockReq, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetBlockReq, _impl_.height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetBlockAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetBlockAck, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetBlockAck, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetBlockAck, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::SyncFromZeroGetBlockAck, _impl_.blocks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetBlockByUtxoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::GetBlockByUtxoReq, _impl_.addr_),
  PROTOBUF_FIELD_OFFSET(::GetBlockByUtxoReq, _impl_.utxo_),
  PROTOBUF_FIELD_OFFSET(::GetBlockByUtxoReq, _impl_.msg_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetBlockByUtxoAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::GetBlockByUtxoAck, _impl_.addr_),
  PROTOBUF_FIELD_OFFSET(::GetBlockByUtxoAck, _impl_.utxo_),
  PROTOBUF_FIELD_OFFSET(::GetBlockByUtxoAck, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::GetBlockByUtxoAck, _impl_.block_raw_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HashType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HashType, _impl_.hash_),
  PROTOBUF_FIELD_OFFSET(::HashType, _impl_.tx_or_block_),
  PROTOBUF_FIELD_OFFSET(::HashType, _impl_.block_raw_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetBlockByHashReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::GetBlockByHashReq, _impl_.addr_),
  PROTOBUF_FIELD_OFFSET(::GetBlockByHashReq, _impl_.missinghashs_),
  PROTOBUF_FIELD_OFFSET(::GetBlockByHashReq, _impl_.msg_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetBlockByHashAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::GetBlockByHashAck, _impl_.addr_),
  PROTOBUF_FIELD_OFFSET(::GetBlockByHashAck, _impl_.blocks_),
  PROTOBUF_FIELD_OFFSET(::GetBlockByHashAck, _impl_.msg_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncNodeHashReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncNodeHashReq, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::SyncNodeHashReq, _impl_.msg_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SyncNodeHashAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SyncNodeHashAck, _impl_.self_node_id_),
  PROTOBUF_FIELD_OFFSET(::SyncNodeHashAck, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::SyncNodeHashAck, _impl_.hash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetCheckSumHashReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::GetCheckSumHashReq, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::GetCheckSumHashReq, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::GetCheckSumHashReq, _impl_.self_node_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetCheckSumHashAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::GetCheckSumHashAck, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::GetCheckSumHashAck, _impl_.hash_),
  PROTOBUF_FIELD_OFFSET(::GetCheckSumHashAck, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::GetCheckSumHashAck, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::GetCheckSumHashAck, _impl_.self_node_id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::FastSyncGetHashReq)},
  { 10, -1, -1, sizeof(::FastSyncBlockHashs)},
  { 18, -1, -1, sizeof(::FastSyncGetHashAck)},
  { 28, -1, -1, sizeof(::FastSyncGetBlockReq)},
  { 37, -1, -1, sizeof(::FastSyncBlock)},
  { 45, -1, -1, sizeof(::FastSyncGetBlockAck)},
  { 53, -1, -1, sizeof(::SyncGetSumHashReq)},
  { 63, -1, -1, sizeof(::SyncSumHash)},
  { 72, -1, -1, sizeof(::SyncGetSumHashAck)},
  { 82, -1, -1, sizeof(::SyncGetHeightHashReq)},
  { 92, -1, -1, sizeof(::SyncGetHeightHashAck)},
  { 102, -1, -1, sizeof(::SyncGetBlockReq)},
  { 111, -1, -1, sizeof(::SyncGetBlockAck)},
  { 119, -1, -1, sizeof(::SyncFromZeroSumHash)},
  { 127, -1, -1, sizeof(::SyncFromZeroGetSumHashReq)},
  { 136, -1, -1, sizeof(::SyncFromZeroGetSumHashAck)},
  { 146, -1, -1, sizeof(::SyncFromZeroGetBlockReq)},
  { 155, -1, -1, sizeof(::SyncFromZeroGetBlockAck)},
  { 165, -1, -1, sizeof(::GetBlockByUtxoReq)},
  { 174, -1, -1, sizeof(::GetBlockByUtxoAck)},
  { 184, -1, -1, sizeof(::HashType)},
  { 193, -1, -1, sizeof(::GetBlockByHashReq)},
  { 202, -1, -1, sizeof(::GetBlockByHashAck)},
  { 211, -1, -1, sizeof(::SyncNodeHashReq)},
  { 219, -1, -1, sizeof(::SyncNodeHashAck)},
  { 228, -1, -1, sizeof(::GetCheckSumHashReq)},
  { 237, -1, -1, sizeof(::GetCheckSumHashAck)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_FastSyncGetHashReq_default_instance_._instance,
  &::_FastSyncBlockHashs_default_instance_._instance,
  &::_FastSyncGetHashAck_default_instance_._instance,
  &::_FastSyncGetBlockReq_default_instance_._instance,
  &::_FastSyncBlock_default_instance_._instance,
  &::_FastSyncGetBlockAck_default_instance_._instance,
  &::_SyncGetSumHashReq_default_instance_._instance,
  &::_SyncSumHash_default_instance_._instance,
  &::_SyncGetSumHashAck_default_instance_._instance,
  &::_SyncGetHeightHashReq_default_instance_._instance,
  &::_SyncGetHeightHashAck_default_instance_._instance,
  &::_SyncGetBlockReq_default_instance_._instance,
  &::_SyncGetBlockAck_default_instance_._instance,
  &::_SyncFromZeroSumHash_default_instance_._instance,
  &::_SyncFromZeroGetSumHashReq_default_instance_._instance,
  &::_SyncFromZeroGetSumHashAck_default_instance_._instance,
  &::_SyncFromZeroGetBlockReq_default_instance_._instance,
  &::_SyncFromZeroGetBlockAck_default_instance_._instance,
  &::_GetBlockByUtxoReq_default_instance_._instance,
  &::_GetBlockByUtxoAck_default_instance_._instance,
  &::_HashType_default_instance_._instance,
  &::_GetBlockByHashReq_default_instance_._instance,
  &::_GetBlockByHashAck_default_instance_._instance,
  &::_SyncNodeHashReq_default_instance_._instance,
  &::_SyncNodeHashAck_default_instance_._instance,
  &::_GetCheckSumHashReq_default_instance_._instance,
  &::_GetCheckSumHashAck_default_instance_._instance,
};

const char descriptor_table_protodef_sync_5fblock_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020sync_block.proto\"d\n\022FastSyncGetHashReq"
  "\022\024\n\014self_node_id\030\001 \001(\t\022\016\n\006msg_id\030\002 \001(\t\022\024"
  "\n\014start_height\030\003 \001(\004\022\022\n\nend_height\030\004 \001(\004"
  "\"3\n\022FastSyncBlockHashs\022\016\n\006height\030\001 \001(\004\022\r"
  "\n\005hashs\030\002 \003(\t\"y\n\022FastSyncGetHashAck\022\024\n\014s"
  "elf_node_id\030\001 \001(\t\022\016\n\006msg_id\030\002 \001(\t\022\031\n\021nod"
  "e_block_height\030\003 \001(\004\022\"\n\005hashs\030\004 \003(\0132\023.Fa"
  "stSyncBlockHashs\"_\n\023FastSyncGetBlockReq\022"
  "\024\n\014self_node_id\030\001 \001(\t\022\016\n\006msg_id\030\002 \001(\t\022\"\n"
  "\005hashs\030\003 \003(\0132\023.FastSyncBlockHashs\"/\n\rFas"
  "tSyncBlock\022\016\n\006height\030\001 \001(\004\022\016\n\006blocks\030\002 \003"
  "(\014\"E\n\023FastSyncGetBlockAck\022\016\n\006msg_id\030\001 \001("
  "\t\022\036\n\006blocks\030\002 \003(\0132\016.FastSyncBlock\"c\n\021Syn"
  "cGetSumHashReq\022\024\n\014self_node_id\030\001 \001(\t\022\016\n\006"
  "msg_id\030\002 \001(\t\022\024\n\014start_height\030\003 \001(\004\022\022\n\nen"
  "d_height\030\004 \001(\004\"E\n\013SyncSumHash\022\024\n\014start_h"
  "eight\030\001 \001(\004\022\022\n\nend_height\030\002 \001(\004\022\014\n\004hash\030"
  "\003 \001(\t\"{\n\021SyncGetSumHashAck\022\024\n\014self_node_"
  "id\030\001 \001(\t\022\016\n\006msg_id\030\002 \001(\t\022\031\n\021node_block_h"
  "eight\030\003 \001(\004\022%\n\017sync_sum_hashes\030\004 \003(\0132\014.S"
  "yncSumHash\"f\n\024SyncGetHeightHashReq\022\024\n\014se"
  "lf_node_id\030\001 \001(\t\022\016\n\006msg_id\030\002 \001(\t\022\024\n\014star"
  "t_height\030\003 \001(\004\022\022\n\nend_height\030\004 \001(\004\"`\n\024Sy"
  "ncGetHeightHashAck\022\014\n\004code\030\001 \001(\005\022\024\n\014self"
  "_node_id\030\002 \001(\t\022\016\n\006msg_id\030\003 \001(\t\022\024\n\014block_"
  "hashes\030\004 \003(\t\"M\n\017SyncGetBlockReq\022\024\n\014self_"
  "node_id\030\001 \001(\t\022\016\n\006msg_id\030\002 \001(\t\022\024\n\014block_h"
  "ashes\030\003 \003(\t\"1\n\017SyncGetBlockAck\022\016\n\006msg_id"
  "\030\001 \001(\t\022\016\n\006blocks\030\002 \003(\014\"3\n\023SyncFromZeroSu"
  "mHash\022\016\n\006height\030\001 \001(\004\022\014\n\004hash\030\002 \001(\t\"R\n\031S"
  "yncFromZeroGetSumHashReq\022\024\n\014self_node_id"
  "\030\001 \001(\t\022\016\n\006msg_id\030\002 \001(\t\022\017\n\007heights\030\003 \003(\004\""
  "y\n\031SyncFromZeroGetSumHashAck\022\014\n\004code\030\001 \001"
  "(\005\022\024\n\014self_node_id\030\002 \001(\t\022\016\n\006msg_id\030\003 \001(\t"
  "\022(\n\nsum_hashes\030\004 \003(\0132\024.SyncFromZeroSumHa"
  "sh\"O\n\027SyncFromZeroGetBlockReq\022\024\n\014self_no"
  "de_id\030\001 \001(\t\022\016\n\006msg_id\030\002 \001(\t\022\016\n\006height\030\003 "
  "\001(\004\"_\n\027SyncFromZeroGetBlockAck\022\024\n\014self_n"
  "ode_id\030\001 \001(\t\022\016\n\006msg_id\030\002 \001(\t\022\016\n\006height\030\003"
  " \001(\004\022\016\n\006blocks\030\004 \003(\014\"\?\n\021GetBlockByUtxoRe"
  "q\022\014\n\004addr\030\001 \001(\t\022\014\n\004utxo\030\002 \001(\t\022\016\n\006msg_id\030"
  "\003 \001(\t\"R\n\021GetBlockByUtxoAck\022\014\n\004addr\030\001 \001(\t"
  "\022\014\n\004utxo\030\002 \001(\t\022\016\n\006msg_id\030\003 \001(\t\022\021\n\tblock_"
  "raw\030\004 \001(\014\"@\n\010HashType\022\014\n\004hash\030\001 \001(\t\022\023\n\013t"
  "x_or_block\030\002 \001(\010\022\021\n\tblock_raw\030\003 \001(\014\"R\n\021G"
  "etBlockByHashReq\022\014\n\004addr\030\001 \001(\t\022\037\n\014missin"
  "gHashs\030\002 \003(\0132\t.HashType\022\016\n\006msg_id\030\003 \001(\t\""
  "L\n\021GetBlockByHashAck\022\014\n\004addr\030\001 \001(\t\022\031\n\006bl"
  "ocks\030\002 \003(\0132\t.HashType\022\016\n\006msg_id\030\003 \001(\t\"7\n"
  "\017SyncNodeHashReq\022\024\n\014self_node_id\030\001 \001(\t\022\016"
  "\n\006msg_id\030\002 \001(\t\"E\n\017SyncNodeHashAck\022\024\n\014sel"
  "f_node_id\030\001 \001(\t\022\016\n\006msg_id\030\002 \001(\t\022\014\n\004hash\030"
  "\003 \001(\t\"J\n\022GetCheckSumHashReq\022\016\n\006height\030\001 "
  "\001(\004\022\016\n\006msg_id\030\002 \001(\t\022\024\n\014self_node_id\030\003 \001("
  "\t\"i\n\022GetCheckSumHashAck\022\016\n\006height\030\001 \001(\004\022"
  "\014\n\004hash\030\002 \001(\t\022\016\n\006msg_id\030\003 \001(\t\022\017\n\007success"
  "\030\004 \001(\010\022\024\n\014self_node_id\030\005 \001(\tb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_sync_5fblock_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_sync_5fblock_2eproto = {
    false, false, 2276, descriptor_table_protodef_sync_5fblock_2eproto,
    "sync_block.proto",
    &descriptor_table_sync_5fblock_2eproto_once, nullptr, 0, 27,
    schemas, file_default_instances, TableStruct_sync_5fblock_2eproto::offsets,
    file_level_metadata_sync_5fblock_2eproto, file_level_enum_descriptors_sync_5fblock_2eproto,
    file_level_service_descriptors_sync_5fblock_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_sync_5fblock_2eproto_getter() {
  return &descriptor_table_sync_5fblock_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_sync_5fblock_2eproto(&descriptor_table_sync_5fblock_2eproto);

// ===================================================================

class FastSyncGetHashReq::_Internal {
 public:
};

FastSyncGetHashReq::FastSyncGetHashReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:FastSyncGetHashReq)
}
FastSyncGetHashReq::FastSyncGetHashReq(const FastSyncGetHashReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FastSyncGetHashReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.start_height_){}
    , decltype(_impl_.end_height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.start_height_, &from._impl_.start_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.end_height_) -
    reinterpret_cast<char*>(&_impl_.start_height_)) + sizeof(_impl_.end_height_));
  // @@protoc_insertion_point(copy_constructor:FastSyncGetHashReq)
}

inline void FastSyncGetHashReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.start_height_){uint64_t{0u}}
    , decltype(_impl_.end_height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FastSyncGetHashReq::~FastSyncGetHashReq() {
  // @@protoc_insertion_point(destructor:FastSyncGetHashReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FastSyncGetHashReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void FastSyncGetHashReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FastSyncGetHashReq::Clear() {
// @@protoc_insertion_point(message_clear_start:FastSyncGetHashReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  ::memset(&_impl_.start_height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.end_height_) -
      reinterpret_cast<char*>(&_impl_.start_height_)) + sizeof(_impl_.end_height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FastSyncGetHashReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "FastSyncGetHashReq.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "FastSyncGetHashReq.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // uint64 start_height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.start_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 end_height = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.end_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FastSyncGetHashReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FastSyncGetHashReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "FastSyncGetHashReq.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "FastSyncGetHashReq.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // uint64 start_height = 3;
  if (this->_internal_start_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_start_height(), target);
  }

  // uint64 end_height = 4;
  if (this->_internal_end_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_end_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FastSyncGetHashReq)
  return target;
}

size_t FastSyncGetHashReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FastSyncGetHashReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // uint64 start_height = 3;
  if (this->_internal_start_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_start_height());
  }

  // uint64 end_height = 4;
  if (this->_internal_end_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_end_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FastSyncGetHashReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FastSyncGetHashReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FastSyncGetHashReq::GetClassData() const { return &_class_data_; }


void FastSyncGetHashReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FastSyncGetHashReq*>(&to_msg);
  auto& from = static_cast<const FastSyncGetHashReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FastSyncGetHashReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (from._internal_start_height() != 0) {
    _this->_internal_set_start_height(from._internal_start_height());
  }
  if (from._internal_end_height() != 0) {
    _this->_internal_set_end_height(from._internal_end_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FastSyncGetHashReq::CopyFrom(const FastSyncGetHashReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FastSyncGetHashReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastSyncGetHashReq::IsInitialized() const {
  return true;
}

void FastSyncGetHashReq::InternalSwap(FastSyncGetHashReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FastSyncGetHashReq, _impl_.end_height_)
      + sizeof(FastSyncGetHashReq::_impl_.end_height_)
      - PROTOBUF_FIELD_OFFSET(FastSyncGetHashReq, _impl_.start_height_)>(
          reinterpret_cast<char*>(&_impl_.start_height_),
          reinterpret_cast<char*>(&other->_impl_.start_height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FastSyncGetHashReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[0]);
}

// ===================================================================

class FastSyncBlockHashs::_Internal {
 public:
};

FastSyncBlockHashs::FastSyncBlockHashs(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:FastSyncBlockHashs)
}
FastSyncBlockHashs::FastSyncBlockHashs(const FastSyncBlockHashs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FastSyncBlockHashs* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hashs_){from._impl_.hashs_}
    , decltype(_impl_.height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.height_ = from._impl_.height_;
  // @@protoc_insertion_point(copy_constructor:FastSyncBlockHashs)
}

inline void FastSyncBlockHashs::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.hashs_){arena}
    , decltype(_impl_.height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FastSyncBlockHashs::~FastSyncBlockHashs() {
  // @@protoc_insertion_point(destructor:FastSyncBlockHashs)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FastSyncBlockHashs::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hashs_.~RepeatedPtrField();
}

void FastSyncBlockHashs::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FastSyncBlockHashs::Clear() {
// @@protoc_insertion_point(message_clear_start:FastSyncBlockHashs)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hashs_.Clear();
  _impl_.height_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FastSyncBlockHashs::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string hashs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_hashs();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "FastSyncBlockHashs.hashs"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FastSyncBlockHashs::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FastSyncBlockHashs)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 height = 1;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_height(), target);
  }

  // repeated string hashs = 2;
  for (int i = 0, n = this->_internal_hashs_size(); i < n; i++) {
    const auto& s = this->_internal_hashs(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "FastSyncBlockHashs.hashs");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FastSyncBlockHashs)
  return target;
}

size_t FastSyncBlockHashs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FastSyncBlockHashs)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string hashs = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.hashs_.size());
  for (int i = 0, n = _impl_.hashs_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.hashs_.Get(i));
  }

  // uint64 height = 1;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FastSyncBlockHashs::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FastSyncBlockHashs::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FastSyncBlockHashs::GetClassData() const { return &_class_data_; }


void FastSyncBlockHashs::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FastSyncBlockHashs*>(&to_msg);
  auto& from = static_cast<const FastSyncBlockHashs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FastSyncBlockHashs)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.hashs_.MergeFrom(from._impl_.hashs_);
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FastSyncBlockHashs::CopyFrom(const FastSyncBlockHashs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FastSyncBlockHashs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastSyncBlockHashs::IsInitialized() const {
  return true;
}

void FastSyncBlockHashs::InternalSwap(FastSyncBlockHashs* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hashs_.InternalSwap(&other->_impl_.hashs_);
  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FastSyncBlockHashs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[1]);
}

// ===================================================================

class FastSyncGetHashAck::_Internal {
 public:
};

FastSyncGetHashAck::FastSyncGetHashAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:FastSyncGetHashAck)
}
FastSyncGetHashAck::FastSyncGetHashAck(const FastSyncGetHashAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FastSyncGetHashAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hashs_){from._impl_.hashs_}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.node_block_height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.node_block_height_ = from._impl_.node_block_height_;
  // @@protoc_insertion_point(copy_constructor:FastSyncGetHashAck)
}

inline void FastSyncGetHashAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.hashs_){arena}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.node_block_height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FastSyncGetHashAck::~FastSyncGetHashAck() {
  // @@protoc_insertion_point(destructor:FastSyncGetHashAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FastSyncGetHashAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hashs_.~RepeatedPtrField();
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void FastSyncGetHashAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FastSyncGetHashAck::Clear() {
// @@protoc_insertion_point(message_clear_start:FastSyncGetHashAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hashs_.Clear();
  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _impl_.node_block_height_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FastSyncGetHashAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "FastSyncGetHashAck.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "FastSyncGetHashAck.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // uint64 node_block_height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.node_block_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .FastSyncBlockHashs hashs = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_hashs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FastSyncGetHashAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FastSyncGetHashAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "FastSyncGetHashAck.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "FastSyncGetHashAck.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // uint64 node_block_height = 3;
  if (this->_internal_node_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_node_block_height(), target);
  }

  // repeated .FastSyncBlockHashs hashs = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_hashs_size()); i < n; i++) {
    const auto& repfield = this->_internal_hashs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FastSyncGetHashAck)
  return target;
}

size_t FastSyncGetHashAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FastSyncGetHashAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FastSyncBlockHashs hashs = 4;
  total_size += 1UL * this->_internal_hashs_size();
  for (const auto& msg : this->_impl_.hashs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // uint64 node_block_height = 3;
  if (this->_internal_node_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_node_block_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FastSyncGetHashAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FastSyncGetHashAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FastSyncGetHashAck::GetClassData() const { return &_class_data_; }


void FastSyncGetHashAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FastSyncGetHashAck*>(&to_msg);
  auto& from = static_cast<const FastSyncGetHashAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FastSyncGetHashAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.hashs_.MergeFrom(from._impl_.hashs_);
  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (from._internal_node_block_height() != 0) {
    _this->_internal_set_node_block_height(from._internal_node_block_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FastSyncGetHashAck::CopyFrom(const FastSyncGetHashAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FastSyncGetHashAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastSyncGetHashAck::IsInitialized() const {
  return true;
}

void FastSyncGetHashAck::InternalSwap(FastSyncGetHashAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hashs_.InternalSwap(&other->_impl_.hashs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  swap(_impl_.node_block_height_, other->_impl_.node_block_height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FastSyncGetHashAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[2]);
}

// ===================================================================

class FastSyncGetBlockReq::_Internal {
 public:
};

FastSyncGetBlockReq::FastSyncGetBlockReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:FastSyncGetBlockReq)
}
FastSyncGetBlockReq::FastSyncGetBlockReq(const FastSyncGetBlockReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FastSyncGetBlockReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hashs_){from._impl_.hashs_}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:FastSyncGetBlockReq)
}

inline void FastSyncGetBlockReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.hashs_){arena}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FastSyncGetBlockReq::~FastSyncGetBlockReq() {
  // @@protoc_insertion_point(destructor:FastSyncGetBlockReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FastSyncGetBlockReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hashs_.~RepeatedPtrField();
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void FastSyncGetBlockReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FastSyncGetBlockReq::Clear() {
// @@protoc_insertion_point(message_clear_start:FastSyncGetBlockReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hashs_.Clear();
  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FastSyncGetBlockReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "FastSyncGetBlockReq.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "FastSyncGetBlockReq.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .FastSyncBlockHashs hashs = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_hashs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FastSyncGetBlockReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FastSyncGetBlockReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "FastSyncGetBlockReq.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "FastSyncGetBlockReq.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // repeated .FastSyncBlockHashs hashs = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_hashs_size()); i < n; i++) {
    const auto& repfield = this->_internal_hashs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FastSyncGetBlockReq)
  return target;
}

size_t FastSyncGetBlockReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FastSyncGetBlockReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FastSyncBlockHashs hashs = 3;
  total_size += 1UL * this->_internal_hashs_size();
  for (const auto& msg : this->_impl_.hashs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FastSyncGetBlockReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FastSyncGetBlockReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FastSyncGetBlockReq::GetClassData() const { return &_class_data_; }


void FastSyncGetBlockReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FastSyncGetBlockReq*>(&to_msg);
  auto& from = static_cast<const FastSyncGetBlockReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FastSyncGetBlockReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.hashs_.MergeFrom(from._impl_.hashs_);
  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FastSyncGetBlockReq::CopyFrom(const FastSyncGetBlockReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FastSyncGetBlockReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastSyncGetBlockReq::IsInitialized() const {
  return true;
}

void FastSyncGetBlockReq::InternalSwap(FastSyncGetBlockReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.hashs_.InternalSwap(&other->_impl_.hashs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FastSyncGetBlockReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[3]);
}

// ===================================================================

class FastSyncBlock::_Internal {
 public:
};

FastSyncBlock::FastSyncBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:FastSyncBlock)
}
FastSyncBlock::FastSyncBlock(const FastSyncBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FastSyncBlock* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.blocks_){from._impl_.blocks_}
    , decltype(_impl_.height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.height_ = from._impl_.height_;
  // @@protoc_insertion_point(copy_constructor:FastSyncBlock)
}

inline void FastSyncBlock::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.blocks_){arena}
    , decltype(_impl_.height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FastSyncBlock::~FastSyncBlock() {
  // @@protoc_insertion_point(destructor:FastSyncBlock)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FastSyncBlock::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.blocks_.~RepeatedPtrField();
}

void FastSyncBlock::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FastSyncBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:FastSyncBlock)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blocks_.Clear();
  _impl_.height_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FastSyncBlock::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated bytes blocks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_blocks();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FastSyncBlock::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FastSyncBlock)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 height = 1;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_height(), target);
  }

  // repeated bytes blocks = 2;
  for (int i = 0, n = this->_internal_blocks_size(); i < n; i++) {
    const auto& s = this->_internal_blocks(i);
    target = stream->WriteBytes(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FastSyncBlock)
  return target;
}

size_t FastSyncBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FastSyncBlock)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes blocks = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.blocks_.size());
  for (int i = 0, n = _impl_.blocks_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.blocks_.Get(i));
  }

  // uint64 height = 1;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FastSyncBlock::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FastSyncBlock::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FastSyncBlock::GetClassData() const { return &_class_data_; }


void FastSyncBlock::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FastSyncBlock*>(&to_msg);
  auto& from = static_cast<const FastSyncBlock&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FastSyncBlock)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.blocks_.MergeFrom(from._impl_.blocks_);
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FastSyncBlock::CopyFrom(const FastSyncBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FastSyncBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastSyncBlock::IsInitialized() const {
  return true;
}

void FastSyncBlock::InternalSwap(FastSyncBlock* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.blocks_.InternalSwap(&other->_impl_.blocks_);
  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FastSyncBlock::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[4]);
}

// ===================================================================

class FastSyncGetBlockAck::_Internal {
 public:
};

FastSyncGetBlockAck::FastSyncGetBlockAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:FastSyncGetBlockAck)
}
FastSyncGetBlockAck::FastSyncGetBlockAck(const FastSyncGetBlockAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FastSyncGetBlockAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.blocks_){from._impl_.blocks_}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:FastSyncGetBlockAck)
}

inline void FastSyncGetBlockAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.blocks_){arena}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FastSyncGetBlockAck::~FastSyncGetBlockAck() {
  // @@protoc_insertion_point(destructor:FastSyncGetBlockAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FastSyncGetBlockAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.blocks_.~RepeatedPtrField();
  _impl_.msg_id_.Destroy();
}

void FastSyncGetBlockAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FastSyncGetBlockAck::Clear() {
// @@protoc_insertion_point(message_clear_start:FastSyncGetBlockAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blocks_.Clear();
  _impl_.msg_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FastSyncGetBlockAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "FastSyncGetBlockAck.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .FastSyncBlock blocks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_blocks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FastSyncGetBlockAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FastSyncGetBlockAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg_id = 1;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "FastSyncGetBlockAck.msg_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg_id(), target);
  }

  // repeated .FastSyncBlock blocks = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_blocks_size()); i < n; i++) {
    const auto& repfield = this->_internal_blocks(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FastSyncGetBlockAck)
  return target;
}

size_t FastSyncGetBlockAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FastSyncGetBlockAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FastSyncBlock blocks = 2;
  total_size += 1UL * this->_internal_blocks_size();
  for (const auto& msg : this->_impl_.blocks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg_id = 1;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FastSyncGetBlockAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FastSyncGetBlockAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FastSyncGetBlockAck::GetClassData() const { return &_class_data_; }


void FastSyncGetBlockAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FastSyncGetBlockAck*>(&to_msg);
  auto& from = static_cast<const FastSyncGetBlockAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FastSyncGetBlockAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.blocks_.MergeFrom(from._impl_.blocks_);
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FastSyncGetBlockAck::CopyFrom(const FastSyncGetBlockAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FastSyncGetBlockAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FastSyncGetBlockAck::IsInitialized() const {
  return true;
}

void FastSyncGetBlockAck::InternalSwap(FastSyncGetBlockAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.blocks_.InternalSwap(&other->_impl_.blocks_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FastSyncGetBlockAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[5]);
}

// ===================================================================

class SyncGetSumHashReq::_Internal {
 public:
};

SyncGetSumHashReq::SyncGetSumHashReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncGetSumHashReq)
}
SyncGetSumHashReq::SyncGetSumHashReq(const SyncGetSumHashReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncGetSumHashReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.start_height_){}
    , decltype(_impl_.end_height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.start_height_, &from._impl_.start_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.end_height_) -
    reinterpret_cast<char*>(&_impl_.start_height_)) + sizeof(_impl_.end_height_));
  // @@protoc_insertion_point(copy_constructor:SyncGetSumHashReq)
}

inline void SyncGetSumHashReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.start_height_){uint64_t{0u}}
    , decltype(_impl_.end_height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncGetSumHashReq::~SyncGetSumHashReq() {
  // @@protoc_insertion_point(destructor:SyncGetSumHashReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncGetSumHashReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void SyncGetSumHashReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncGetSumHashReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncGetSumHashReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  ::memset(&_impl_.start_height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.end_height_) -
      reinterpret_cast<char*>(&_impl_.start_height_)) + sizeof(_impl_.end_height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncGetSumHashReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncGetSumHashReq.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncGetSumHashReq.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // uint64 start_height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.start_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 end_height = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.end_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncGetSumHashReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncGetSumHashReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetSumHashReq.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetSumHashReq.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // uint64 start_height = 3;
  if (this->_internal_start_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_start_height(), target);
  }

  // uint64 end_height = 4;
  if (this->_internal_end_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_end_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncGetSumHashReq)
  return target;
}

size_t SyncGetSumHashReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncGetSumHashReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // uint64 start_height = 3;
  if (this->_internal_start_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_start_height());
  }

  // uint64 end_height = 4;
  if (this->_internal_end_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_end_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncGetSumHashReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncGetSumHashReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncGetSumHashReq::GetClassData() const { return &_class_data_; }


void SyncGetSumHashReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncGetSumHashReq*>(&to_msg);
  auto& from = static_cast<const SyncGetSumHashReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncGetSumHashReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (from._internal_start_height() != 0) {
    _this->_internal_set_start_height(from._internal_start_height());
  }
  if (from._internal_end_height() != 0) {
    _this->_internal_set_end_height(from._internal_end_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncGetSumHashReq::CopyFrom(const SyncGetSumHashReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncGetSumHashReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncGetSumHashReq::IsInitialized() const {
  return true;
}

void SyncGetSumHashReq::InternalSwap(SyncGetSumHashReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SyncGetSumHashReq, _impl_.end_height_)
      + sizeof(SyncGetSumHashReq::_impl_.end_height_)
      - PROTOBUF_FIELD_OFFSET(SyncGetSumHashReq, _impl_.start_height_)>(
          reinterpret_cast<char*>(&_impl_.start_height_),
          reinterpret_cast<char*>(&other->_impl_.start_height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncGetSumHashReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[6]);
}

// ===================================================================

class SyncSumHash::_Internal {
 public:
};

SyncSumHash::SyncSumHash(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncSumHash)
}
SyncSumHash::SyncSumHash(const SyncSumHash& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncSumHash* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_){}
    , decltype(_impl_.start_height_){}
    , decltype(_impl_.end_height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    _this->_impl_.hash_.Set(from._internal_hash(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.start_height_, &from._impl_.start_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.end_height_) -
    reinterpret_cast<char*>(&_impl_.start_height_)) + sizeof(_impl_.end_height_));
  // @@protoc_insertion_point(copy_constructor:SyncSumHash)
}

inline void SyncSumHash::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_){}
    , decltype(_impl_.start_height_){uint64_t{0u}}
    , decltype(_impl_.end_height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncSumHash::~SyncSumHash() {
  // @@protoc_insertion_point(destructor:SyncSumHash)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncSumHash::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hash_.Destroy();
}

void SyncSumHash::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncSumHash::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncSumHash)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hash_.ClearToEmpty();
  ::memset(&_impl_.start_height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.end_height_) -
      reinterpret_cast<char*>(&_impl_.start_height_)) + sizeof(_impl_.end_height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncSumHash::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 start_height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.start_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 end_height = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.end_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string hash = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_hash();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncSumHash.hash"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncSumHash::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncSumHash)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 start_height = 1;
  if (this->_internal_start_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_start_height(), target);
  }

  // uint64 end_height = 2;
  if (this->_internal_end_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_end_height(), target);
  }

  // string hash = 3;
  if (!this->_internal_hash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncSumHash.hash");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_hash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncSumHash)
  return target;
}

size_t SyncSumHash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncSumHash)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hash = 3;
  if (!this->_internal_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // uint64 start_height = 1;
  if (this->_internal_start_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_start_height());
  }

  // uint64 end_height = 2;
  if (this->_internal_end_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_end_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncSumHash::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncSumHash::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncSumHash::GetClassData() const { return &_class_data_; }


void SyncSumHash::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncSumHash*>(&to_msg);
  auto& from = static_cast<const SyncSumHash&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncSumHash)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (from._internal_start_height() != 0) {
    _this->_internal_set_start_height(from._internal_start_height());
  }
  if (from._internal_end_height() != 0) {
    _this->_internal_set_end_height(from._internal_end_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncSumHash::CopyFrom(const SyncSumHash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncSumHash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncSumHash::IsInitialized() const {
  return true;
}

void SyncSumHash::InternalSwap(SyncSumHash* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.hash_, lhs_arena,
      &other->_impl_.hash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SyncSumHash, _impl_.end_height_)
      + sizeof(SyncSumHash::_impl_.end_height_)
      - PROTOBUF_FIELD_OFFSET(SyncSumHash, _impl_.start_height_)>(
          reinterpret_cast<char*>(&_impl_.start_height_),
          reinterpret_cast<char*>(&other->_impl_.start_height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncSumHash::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[7]);
}

// ===================================================================

class SyncGetSumHashAck::_Internal {
 public:
};

SyncGetSumHashAck::SyncGetSumHashAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncGetSumHashAck)
}
SyncGetSumHashAck::SyncGetSumHashAck(const SyncGetSumHashAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncGetSumHashAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sync_sum_hashes_){from._impl_.sync_sum_hashes_}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.node_block_height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.node_block_height_ = from._impl_.node_block_height_;
  // @@protoc_insertion_point(copy_constructor:SyncGetSumHashAck)
}

inline void SyncGetSumHashAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sync_sum_hashes_){arena}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.node_block_height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncGetSumHashAck::~SyncGetSumHashAck() {
  // @@protoc_insertion_point(destructor:SyncGetSumHashAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncGetSumHashAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sync_sum_hashes_.~RepeatedPtrField();
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void SyncGetSumHashAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncGetSumHashAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncGetSumHashAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sync_sum_hashes_.Clear();
  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _impl_.node_block_height_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncGetSumHashAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncGetSumHashAck.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncGetSumHashAck.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // uint64 node_block_height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.node_block_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .SyncSumHash sync_sum_hashes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sync_sum_hashes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncGetSumHashAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncGetSumHashAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetSumHashAck.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetSumHashAck.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // uint64 node_block_height = 3;
  if (this->_internal_node_block_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_node_block_height(), target);
  }

  // repeated .SyncSumHash sync_sum_hashes = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sync_sum_hashes_size()); i < n; i++) {
    const auto& repfield = this->_internal_sync_sum_hashes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncGetSumHashAck)
  return target;
}

size_t SyncGetSumHashAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncGetSumHashAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SyncSumHash sync_sum_hashes = 4;
  total_size += 1UL * this->_internal_sync_sum_hashes_size();
  for (const auto& msg : this->_impl_.sync_sum_hashes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // uint64 node_block_height = 3;
  if (this->_internal_node_block_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_node_block_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncGetSumHashAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncGetSumHashAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncGetSumHashAck::GetClassData() const { return &_class_data_; }


void SyncGetSumHashAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncGetSumHashAck*>(&to_msg);
  auto& from = static_cast<const SyncGetSumHashAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncGetSumHashAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.sync_sum_hashes_.MergeFrom(from._impl_.sync_sum_hashes_);
  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (from._internal_node_block_height() != 0) {
    _this->_internal_set_node_block_height(from._internal_node_block_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncGetSumHashAck::CopyFrom(const SyncGetSumHashAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncGetSumHashAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncGetSumHashAck::IsInitialized() const {
  return true;
}

void SyncGetSumHashAck::InternalSwap(SyncGetSumHashAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sync_sum_hashes_.InternalSwap(&other->_impl_.sync_sum_hashes_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  swap(_impl_.node_block_height_, other->_impl_.node_block_height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncGetSumHashAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[8]);
}

// ===================================================================

class SyncGetHeightHashReq::_Internal {
 public:
};

SyncGetHeightHashReq::SyncGetHeightHashReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncGetHeightHashReq)
}
SyncGetHeightHashReq::SyncGetHeightHashReq(const SyncGetHeightHashReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncGetHeightHashReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.start_height_){}
    , decltype(_impl_.end_height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.start_height_, &from._impl_.start_height_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.end_height_) -
    reinterpret_cast<char*>(&_impl_.start_height_)) + sizeof(_impl_.end_height_));
  // @@protoc_insertion_point(copy_constructor:SyncGetHeightHashReq)
}

inline void SyncGetHeightHashReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.start_height_){uint64_t{0u}}
    , decltype(_impl_.end_height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncGetHeightHashReq::~SyncGetHeightHashReq() {
  // @@protoc_insertion_point(destructor:SyncGetHeightHashReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncGetHeightHashReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void SyncGetHeightHashReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncGetHeightHashReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncGetHeightHashReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  ::memset(&_impl_.start_height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.end_height_) -
      reinterpret_cast<char*>(&_impl_.start_height_)) + sizeof(_impl_.end_height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncGetHeightHashReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncGetHeightHashReq.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncGetHeightHashReq.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // uint64 start_height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.start_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 end_height = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.end_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncGetHeightHashReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncGetHeightHashReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetHeightHashReq.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetHeightHashReq.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // uint64 start_height = 3;
  if (this->_internal_start_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_start_height(), target);
  }

  // uint64 end_height = 4;
  if (this->_internal_end_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_end_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncGetHeightHashReq)
  return target;
}

size_t SyncGetHeightHashReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncGetHeightHashReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // uint64 start_height = 3;
  if (this->_internal_start_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_start_height());
  }

  // uint64 end_height = 4;
  if (this->_internal_end_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_end_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncGetHeightHashReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncGetHeightHashReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncGetHeightHashReq::GetClassData() const { return &_class_data_; }


void SyncGetHeightHashReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncGetHeightHashReq*>(&to_msg);
  auto& from = static_cast<const SyncGetHeightHashReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncGetHeightHashReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (from._internal_start_height() != 0) {
    _this->_internal_set_start_height(from._internal_start_height());
  }
  if (from._internal_end_height() != 0) {
    _this->_internal_set_end_height(from._internal_end_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncGetHeightHashReq::CopyFrom(const SyncGetHeightHashReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncGetHeightHashReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncGetHeightHashReq::IsInitialized() const {
  return true;
}

void SyncGetHeightHashReq::InternalSwap(SyncGetHeightHashReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SyncGetHeightHashReq, _impl_.end_height_)
      + sizeof(SyncGetHeightHashReq::_impl_.end_height_)
      - PROTOBUF_FIELD_OFFSET(SyncGetHeightHashReq, _impl_.start_height_)>(
          reinterpret_cast<char*>(&_impl_.start_height_),
          reinterpret_cast<char*>(&other->_impl_.start_height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncGetHeightHashReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[9]);
}

// ===================================================================

class SyncGetHeightHashAck::_Internal {
 public:
};

SyncGetHeightHashAck::SyncGetHeightHashAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncGetHeightHashAck)
}
SyncGetHeightHashAck::SyncGetHeightHashAck(const SyncGetHeightHashAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncGetHeightHashAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.block_hashes_){from._impl_.block_hashes_}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.code_ = from._impl_.code_;
  // @@protoc_insertion_point(copy_constructor:SyncGetHeightHashAck)
}

inline void SyncGetHeightHashAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.block_hashes_){arena}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.code_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncGetHeightHashAck::~SyncGetHeightHashAck() {
  // @@protoc_insertion_point(destructor:SyncGetHeightHashAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncGetHeightHashAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.block_hashes_.~RepeatedPtrField();
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void SyncGetHeightHashAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncGetHeightHashAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncGetHeightHashAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.block_hashes_.Clear();
  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _impl_.code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncGetHeightHashAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string self_node_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncGetHeightHashAck.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncGetHeightHashAck.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated string block_hashes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_block_hashes();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "SyncGetHeightHashAck.block_hashes"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncGetHeightHashAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncGetHeightHashAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string self_node_id = 2;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetHeightHashAck.self_node_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_self_node_id(), target);
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetHeightHashAck.msg_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg_id(), target);
  }

  // repeated string block_hashes = 4;
  for (int i = 0, n = this->_internal_block_hashes_size(); i < n; i++) {
    const auto& s = this->_internal_block_hashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetHeightHashAck.block_hashes");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncGetHeightHashAck)
  return target;
}

size_t SyncGetHeightHashAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncGetHeightHashAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string block_hashes = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.block_hashes_.size());
  for (int i = 0, n = _impl_.block_hashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.block_hashes_.Get(i));
  }

  // string self_node_id = 2;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncGetHeightHashAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncGetHeightHashAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncGetHeightHashAck::GetClassData() const { return &_class_data_; }


void SyncGetHeightHashAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncGetHeightHashAck*>(&to_msg);
  auto& from = static_cast<const SyncGetHeightHashAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncGetHeightHashAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.block_hashes_.MergeFrom(from._impl_.block_hashes_);
  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncGetHeightHashAck::CopyFrom(const SyncGetHeightHashAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncGetHeightHashAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncGetHeightHashAck::IsInitialized() const {
  return true;
}

void SyncGetHeightHashAck::InternalSwap(SyncGetHeightHashAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.block_hashes_.InternalSwap(&other->_impl_.block_hashes_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  swap(_impl_.code_, other->_impl_.code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncGetHeightHashAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[10]);
}

// ===================================================================

class SyncGetBlockReq::_Internal {
 public:
};

SyncGetBlockReq::SyncGetBlockReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncGetBlockReq)
}
SyncGetBlockReq::SyncGetBlockReq(const SyncGetBlockReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncGetBlockReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.block_hashes_){from._impl_.block_hashes_}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:SyncGetBlockReq)
}

inline void SyncGetBlockReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.block_hashes_){arena}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncGetBlockReq::~SyncGetBlockReq() {
  // @@protoc_insertion_point(destructor:SyncGetBlockReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncGetBlockReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.block_hashes_.~RepeatedPtrField();
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void SyncGetBlockReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncGetBlockReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncGetBlockReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.block_hashes_.Clear();
  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncGetBlockReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncGetBlockReq.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncGetBlockReq.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated string block_hashes = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_block_hashes();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "SyncGetBlockReq.block_hashes"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncGetBlockReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncGetBlockReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetBlockReq.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetBlockReq.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // repeated string block_hashes = 3;
  for (int i = 0, n = this->_internal_block_hashes_size(); i < n; i++) {
    const auto& s = this->_internal_block_hashes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetBlockReq.block_hashes");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncGetBlockReq)
  return target;
}

size_t SyncGetBlockReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncGetBlockReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string block_hashes = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.block_hashes_.size());
  for (int i = 0, n = _impl_.block_hashes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.block_hashes_.Get(i));
  }

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncGetBlockReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncGetBlockReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncGetBlockReq::GetClassData() const { return &_class_data_; }


void SyncGetBlockReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncGetBlockReq*>(&to_msg);
  auto& from = static_cast<const SyncGetBlockReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncGetBlockReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.block_hashes_.MergeFrom(from._impl_.block_hashes_);
  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncGetBlockReq::CopyFrom(const SyncGetBlockReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncGetBlockReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncGetBlockReq::IsInitialized() const {
  return true;
}

void SyncGetBlockReq::InternalSwap(SyncGetBlockReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.block_hashes_.InternalSwap(&other->_impl_.block_hashes_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncGetBlockReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[11]);
}

// ===================================================================

class SyncGetBlockAck::_Internal {
 public:
};

SyncGetBlockAck::SyncGetBlockAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncGetBlockAck)
}
SyncGetBlockAck::SyncGetBlockAck(const SyncGetBlockAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncGetBlockAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.blocks_){from._impl_.blocks_}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:SyncGetBlockAck)
}

inline void SyncGetBlockAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.blocks_){arena}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncGetBlockAck::~SyncGetBlockAck() {
  // @@protoc_insertion_point(destructor:SyncGetBlockAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncGetBlockAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.blocks_.~RepeatedPtrField();
  _impl_.msg_id_.Destroy();
}

void SyncGetBlockAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncGetBlockAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncGetBlockAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blocks_.Clear();
  _impl_.msg_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncGetBlockAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncGetBlockAck.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated bytes blocks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_blocks();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncGetBlockAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncGetBlockAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg_id = 1;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncGetBlockAck.msg_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg_id(), target);
  }

  // repeated bytes blocks = 2;
  for (int i = 0, n = this->_internal_blocks_size(); i < n; i++) {
    const auto& s = this->_internal_blocks(i);
    target = stream->WriteBytes(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncGetBlockAck)
  return target;
}

size_t SyncGetBlockAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncGetBlockAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes blocks = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.blocks_.size());
  for (int i = 0, n = _impl_.blocks_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.blocks_.Get(i));
  }

  // string msg_id = 1;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncGetBlockAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncGetBlockAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncGetBlockAck::GetClassData() const { return &_class_data_; }


void SyncGetBlockAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncGetBlockAck*>(&to_msg);
  auto& from = static_cast<const SyncGetBlockAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncGetBlockAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.blocks_.MergeFrom(from._impl_.blocks_);
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncGetBlockAck::CopyFrom(const SyncGetBlockAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncGetBlockAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncGetBlockAck::IsInitialized() const {
  return true;
}

void SyncGetBlockAck::InternalSwap(SyncGetBlockAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.blocks_.InternalSwap(&other->_impl_.blocks_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncGetBlockAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[12]);
}

// ===================================================================

class SyncFromZeroSumHash::_Internal {
 public:
};

SyncFromZeroSumHash::SyncFromZeroSumHash(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncFromZeroSumHash)
}
SyncFromZeroSumHash::SyncFromZeroSumHash(const SyncFromZeroSumHash& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncFromZeroSumHash* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_){}
    , decltype(_impl_.height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    _this->_impl_.hash_.Set(from._internal_hash(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.height_ = from._impl_.height_;
  // @@protoc_insertion_point(copy_constructor:SyncFromZeroSumHash)
}

inline void SyncFromZeroSumHash::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_){}
    , decltype(_impl_.height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncFromZeroSumHash::~SyncFromZeroSumHash() {
  // @@protoc_insertion_point(destructor:SyncFromZeroSumHash)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncFromZeroSumHash::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hash_.Destroy();
}

void SyncFromZeroSumHash::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncFromZeroSumHash::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncFromZeroSumHash)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hash_.ClearToEmpty();
  _impl_.height_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncFromZeroSumHash::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_hash();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncFromZeroSumHash.hash"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncFromZeroSumHash::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncFromZeroSumHash)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 height = 1;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_height(), target);
  }

  // string hash = 2;
  if (!this->_internal_hash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncFromZeroSumHash.hash");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_hash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncFromZeroSumHash)
  return target;
}

size_t SyncFromZeroSumHash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncFromZeroSumHash)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hash = 2;
  if (!this->_internal_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // uint64 height = 1;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncFromZeroSumHash::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncFromZeroSumHash::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncFromZeroSumHash::GetClassData() const { return &_class_data_; }


void SyncFromZeroSumHash::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncFromZeroSumHash*>(&to_msg);
  auto& from = static_cast<const SyncFromZeroSumHash&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncFromZeroSumHash)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncFromZeroSumHash::CopyFrom(const SyncFromZeroSumHash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncFromZeroSumHash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncFromZeroSumHash::IsInitialized() const {
  return true;
}

void SyncFromZeroSumHash::InternalSwap(SyncFromZeroSumHash* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.hash_, lhs_arena,
      &other->_impl_.hash_, rhs_arena
  );
  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncFromZeroSumHash::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[13]);
}

// ===================================================================

class SyncFromZeroGetSumHashReq::_Internal {
 public:
};

SyncFromZeroGetSumHashReq::SyncFromZeroGetSumHashReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncFromZeroGetSumHashReq)
}
SyncFromZeroGetSumHashReq::SyncFromZeroGetSumHashReq(const SyncFromZeroGetSumHashReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncFromZeroGetSumHashReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.heights_){from._impl_.heights_}
    , /*decltype(_impl_._heights_cached_byte_size_)*/{0}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:SyncFromZeroGetSumHashReq)
}

inline void SyncFromZeroGetSumHashReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.heights_){arena}
    , /*decltype(_impl_._heights_cached_byte_size_)*/{0}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncFromZeroGetSumHashReq::~SyncFromZeroGetSumHashReq() {
  // @@protoc_insertion_point(destructor:SyncFromZeroGetSumHashReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncFromZeroGetSumHashReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.heights_.~RepeatedField();
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void SyncFromZeroGetSumHashReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncFromZeroGetSumHashReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncFromZeroGetSumHashReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.heights_.Clear();
  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncFromZeroGetSumHashReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncFromZeroGetSumHashReq.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncFromZeroGetSumHashReq.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 heights = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_heights(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_heights(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncFromZeroGetSumHashReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncFromZeroGetSumHashReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncFromZeroGetSumHashReq.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncFromZeroGetSumHashReq.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // repeated uint64 heights = 3;
  {
    int byte_size = _impl_._heights_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          3, _internal_heights(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncFromZeroGetSumHashReq)
  return target;
}

size_t SyncFromZeroGetSumHashReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncFromZeroGetSumHashReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 heights = 3;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.heights_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._heights_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncFromZeroGetSumHashReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncFromZeroGetSumHashReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncFromZeroGetSumHashReq::GetClassData() const { return &_class_data_; }


void SyncFromZeroGetSumHashReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncFromZeroGetSumHashReq*>(&to_msg);
  auto& from = static_cast<const SyncFromZeroGetSumHashReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncFromZeroGetSumHashReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.heights_.MergeFrom(from._impl_.heights_);
  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncFromZeroGetSumHashReq::CopyFrom(const SyncFromZeroGetSumHashReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncFromZeroGetSumHashReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncFromZeroGetSumHashReq::IsInitialized() const {
  return true;
}

void SyncFromZeroGetSumHashReq::InternalSwap(SyncFromZeroGetSumHashReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.heights_.InternalSwap(&other->_impl_.heights_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncFromZeroGetSumHashReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[14]);
}

// ===================================================================

class SyncFromZeroGetSumHashAck::_Internal {
 public:
};

SyncFromZeroGetSumHashAck::SyncFromZeroGetSumHashAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncFromZeroGetSumHashAck)
}
SyncFromZeroGetSumHashAck::SyncFromZeroGetSumHashAck(const SyncFromZeroGetSumHashAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncFromZeroGetSumHashAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sum_hashes_){from._impl_.sum_hashes_}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.code_ = from._impl_.code_;
  // @@protoc_insertion_point(copy_constructor:SyncFromZeroGetSumHashAck)
}

inline void SyncFromZeroGetSumHashAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.sum_hashes_){arena}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.code_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncFromZeroGetSumHashAck::~SyncFromZeroGetSumHashAck() {
  // @@protoc_insertion_point(destructor:SyncFromZeroGetSumHashAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncFromZeroGetSumHashAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sum_hashes_.~RepeatedPtrField();
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void SyncFromZeroGetSumHashAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncFromZeroGetSumHashAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncFromZeroGetSumHashAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sum_hashes_.Clear();
  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _impl_.code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncFromZeroGetSumHashAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string self_node_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncFromZeroGetSumHashAck.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncFromZeroGetSumHashAck.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .SyncFromZeroSumHash sum_hashes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_sum_hashes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncFromZeroGetSumHashAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncFromZeroGetSumHashAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string self_node_id = 2;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncFromZeroGetSumHashAck.self_node_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_self_node_id(), target);
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncFromZeroGetSumHashAck.msg_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg_id(), target);
  }

  // repeated .SyncFromZeroSumHash sum_hashes = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sum_hashes_size()); i < n; i++) {
    const auto& repfield = this->_internal_sum_hashes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncFromZeroGetSumHashAck)
  return target;
}

size_t SyncFromZeroGetSumHashAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncFromZeroGetSumHashAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .SyncFromZeroSumHash sum_hashes = 4;
  total_size += 1UL * this->_internal_sum_hashes_size();
  for (const auto& msg : this->_impl_.sum_hashes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string self_node_id = 2;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncFromZeroGetSumHashAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncFromZeroGetSumHashAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncFromZeroGetSumHashAck::GetClassData() const { return &_class_data_; }


void SyncFromZeroGetSumHashAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncFromZeroGetSumHashAck*>(&to_msg);
  auto& from = static_cast<const SyncFromZeroGetSumHashAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncFromZeroGetSumHashAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.sum_hashes_.MergeFrom(from._impl_.sum_hashes_);
  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (from._internal_code() != 0) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncFromZeroGetSumHashAck::CopyFrom(const SyncFromZeroGetSumHashAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncFromZeroGetSumHashAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncFromZeroGetSumHashAck::IsInitialized() const {
  return true;
}

void SyncFromZeroGetSumHashAck::InternalSwap(SyncFromZeroGetSumHashAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sum_hashes_.InternalSwap(&other->_impl_.sum_hashes_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  swap(_impl_.code_, other->_impl_.code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncFromZeroGetSumHashAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[15]);
}

// ===================================================================

class SyncFromZeroGetBlockReq::_Internal {
 public:
};

SyncFromZeroGetBlockReq::SyncFromZeroGetBlockReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncFromZeroGetBlockReq)
}
SyncFromZeroGetBlockReq::SyncFromZeroGetBlockReq(const SyncFromZeroGetBlockReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncFromZeroGetBlockReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.height_ = from._impl_.height_;
  // @@protoc_insertion_point(copy_constructor:SyncFromZeroGetBlockReq)
}

inline void SyncFromZeroGetBlockReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncFromZeroGetBlockReq::~SyncFromZeroGetBlockReq() {
  // @@protoc_insertion_point(destructor:SyncFromZeroGetBlockReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncFromZeroGetBlockReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void SyncFromZeroGetBlockReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncFromZeroGetBlockReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncFromZeroGetBlockReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _impl_.height_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncFromZeroGetBlockReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncFromZeroGetBlockReq.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncFromZeroGetBlockReq.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // uint64 height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncFromZeroGetBlockReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncFromZeroGetBlockReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncFromZeroGetBlockReq.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncFromZeroGetBlockReq.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // uint64 height = 3;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncFromZeroGetBlockReq)
  return target;
}

size_t SyncFromZeroGetBlockReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncFromZeroGetBlockReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // uint64 height = 3;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncFromZeroGetBlockReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncFromZeroGetBlockReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncFromZeroGetBlockReq::GetClassData() const { return &_class_data_; }


void SyncFromZeroGetBlockReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncFromZeroGetBlockReq*>(&to_msg);
  auto& from = static_cast<const SyncFromZeroGetBlockReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncFromZeroGetBlockReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncFromZeroGetBlockReq::CopyFrom(const SyncFromZeroGetBlockReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncFromZeroGetBlockReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncFromZeroGetBlockReq::IsInitialized() const {
  return true;
}

void SyncFromZeroGetBlockReq::InternalSwap(SyncFromZeroGetBlockReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncFromZeroGetBlockReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[16]);
}

// ===================================================================

class SyncFromZeroGetBlockAck::_Internal {
 public:
};

SyncFromZeroGetBlockAck::SyncFromZeroGetBlockAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncFromZeroGetBlockAck)
}
SyncFromZeroGetBlockAck::SyncFromZeroGetBlockAck(const SyncFromZeroGetBlockAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncFromZeroGetBlockAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.blocks_){from._impl_.blocks_}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.height_ = from._impl_.height_;
  // @@protoc_insertion_point(copy_constructor:SyncFromZeroGetBlockAck)
}

inline void SyncFromZeroGetBlockAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.blocks_){arena}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncFromZeroGetBlockAck::~SyncFromZeroGetBlockAck() {
  // @@protoc_insertion_point(destructor:SyncFromZeroGetBlockAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncFromZeroGetBlockAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.blocks_.~RepeatedPtrField();
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void SyncFromZeroGetBlockAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncFromZeroGetBlockAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncFromZeroGetBlockAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blocks_.Clear();
  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _impl_.height_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncFromZeroGetBlockAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncFromZeroGetBlockAck.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncFromZeroGetBlockAck.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // uint64 height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated bytes blocks = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_blocks();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncFromZeroGetBlockAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncFromZeroGetBlockAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncFromZeroGetBlockAck.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncFromZeroGetBlockAck.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // uint64 height = 3;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_height(), target);
  }

  // repeated bytes blocks = 4;
  for (int i = 0, n = this->_internal_blocks_size(); i < n; i++) {
    const auto& s = this->_internal_blocks(i);
    target = stream->WriteBytes(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncFromZeroGetBlockAck)
  return target;
}

size_t SyncFromZeroGetBlockAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncFromZeroGetBlockAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes blocks = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.blocks_.size());
  for (int i = 0, n = _impl_.blocks_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.blocks_.Get(i));
  }

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // uint64 height = 3;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncFromZeroGetBlockAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncFromZeroGetBlockAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncFromZeroGetBlockAck::GetClassData() const { return &_class_data_; }


void SyncFromZeroGetBlockAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncFromZeroGetBlockAck*>(&to_msg);
  auto& from = static_cast<const SyncFromZeroGetBlockAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncFromZeroGetBlockAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.blocks_.MergeFrom(from._impl_.blocks_);
  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncFromZeroGetBlockAck::CopyFrom(const SyncFromZeroGetBlockAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncFromZeroGetBlockAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncFromZeroGetBlockAck::IsInitialized() const {
  return true;
}

void SyncFromZeroGetBlockAck::InternalSwap(SyncFromZeroGetBlockAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.blocks_.InternalSwap(&other->_impl_.blocks_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncFromZeroGetBlockAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[17]);
}

// ===================================================================

class GetBlockByUtxoReq::_Internal {
 public:
};

GetBlockByUtxoReq::GetBlockByUtxoReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:GetBlockByUtxoReq)
}
GetBlockByUtxoReq::GetBlockByUtxoReq(const GetBlockByUtxoReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBlockByUtxoReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.addr_){}
    , decltype(_impl_.utxo_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addr().empty()) {
    _this->_impl_.addr_.Set(from._internal_addr(), 
      _this->GetArenaForAllocation());
  }
  _impl_.utxo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.utxo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_utxo().empty()) {
    _this->_impl_.utxo_.Set(from._internal_utxo(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:GetBlockByUtxoReq)
}

inline void GetBlockByUtxoReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.addr_){}
    , decltype(_impl_.utxo_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.utxo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.utxo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBlockByUtxoReq::~GetBlockByUtxoReq() {
  // @@protoc_insertion_point(destructor:GetBlockByUtxoReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBlockByUtxoReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.addr_.Destroy();
  _impl_.utxo_.Destroy();
  _impl_.msg_id_.Destroy();
}

void GetBlockByUtxoReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBlockByUtxoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GetBlockByUtxoReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.addr_.ClearToEmpty();
  _impl_.utxo_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockByUtxoReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string addr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetBlockByUtxoReq.addr"));
        } else
          goto handle_unusual;
        continue;
      // string utxo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_utxo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetBlockByUtxoReq.utxo"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetBlockByUtxoReq.msg_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlockByUtxoReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetBlockByUtxoReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string addr = 1;
  if (!this->_internal_addr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addr().data(), static_cast<int>(this->_internal_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetBlockByUtxoReq.addr");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_addr(), target);
  }

  // string utxo = 2;
  if (!this->_internal_utxo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_utxo().data(), static_cast<int>(this->_internal_utxo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetBlockByUtxoReq.utxo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_utxo(), target);
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetBlockByUtxoReq.msg_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetBlockByUtxoReq)
  return target;
}

size_t GetBlockByUtxoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetBlockByUtxoReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string addr = 1;
  if (!this->_internal_addr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addr());
  }

  // string utxo = 2;
  if (!this->_internal_utxo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_utxo());
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockByUtxoReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBlockByUtxoReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockByUtxoReq::GetClassData() const { return &_class_data_; }


void GetBlockByUtxoReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBlockByUtxoReq*>(&to_msg);
  auto& from = static_cast<const GetBlockByUtxoReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetBlockByUtxoReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_addr().empty()) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (!from._internal_utxo().empty()) {
    _this->_internal_set_utxo(from._internal_utxo());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockByUtxoReq::CopyFrom(const GetBlockByUtxoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetBlockByUtxoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockByUtxoReq::IsInitialized() const {
  return true;
}

void GetBlockByUtxoReq::InternalSwap(GetBlockByUtxoReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.addr_, lhs_arena,
      &other->_impl_.addr_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.utxo_, lhs_arena,
      &other->_impl_.utxo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockByUtxoReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[18]);
}

// ===================================================================

class GetBlockByUtxoAck::_Internal {
 public:
};

GetBlockByUtxoAck::GetBlockByUtxoAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:GetBlockByUtxoAck)
}
GetBlockByUtxoAck::GetBlockByUtxoAck(const GetBlockByUtxoAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBlockByUtxoAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.addr_){}
    , decltype(_impl_.utxo_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.block_raw_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addr().empty()) {
    _this->_impl_.addr_.Set(from._internal_addr(), 
      _this->GetArenaForAllocation());
  }
  _impl_.utxo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.utxo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_utxo().empty()) {
    _this->_impl_.utxo_.Set(from._internal_utxo(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.block_raw_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.block_raw_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_block_raw().empty()) {
    _this->_impl_.block_raw_.Set(from._internal_block_raw(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:GetBlockByUtxoAck)
}

inline void GetBlockByUtxoAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.addr_){}
    , decltype(_impl_.utxo_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.block_raw_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.utxo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.utxo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.block_raw_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.block_raw_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBlockByUtxoAck::~GetBlockByUtxoAck() {
  // @@protoc_insertion_point(destructor:GetBlockByUtxoAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBlockByUtxoAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.addr_.Destroy();
  _impl_.utxo_.Destroy();
  _impl_.msg_id_.Destroy();
  _impl_.block_raw_.Destroy();
}

void GetBlockByUtxoAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBlockByUtxoAck::Clear() {
// @@protoc_insertion_point(message_clear_start:GetBlockByUtxoAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.addr_.ClearToEmpty();
  _impl_.utxo_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _impl_.block_raw_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockByUtxoAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string addr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetBlockByUtxoAck.addr"));
        } else
          goto handle_unusual;
        continue;
      // string utxo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_utxo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetBlockByUtxoAck.utxo"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetBlockByUtxoAck.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // bytes block_raw = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_block_raw();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlockByUtxoAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetBlockByUtxoAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string addr = 1;
  if (!this->_internal_addr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addr().data(), static_cast<int>(this->_internal_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetBlockByUtxoAck.addr");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_addr(), target);
  }

  // string utxo = 2;
  if (!this->_internal_utxo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_utxo().data(), static_cast<int>(this->_internal_utxo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetBlockByUtxoAck.utxo");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_utxo(), target);
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetBlockByUtxoAck.msg_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg_id(), target);
  }

  // bytes block_raw = 4;
  if (!this->_internal_block_raw().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_block_raw(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetBlockByUtxoAck)
  return target;
}

size_t GetBlockByUtxoAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetBlockByUtxoAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string addr = 1;
  if (!this->_internal_addr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addr());
  }

  // string utxo = 2;
  if (!this->_internal_utxo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_utxo());
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // bytes block_raw = 4;
  if (!this->_internal_block_raw().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_block_raw());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockByUtxoAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBlockByUtxoAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockByUtxoAck::GetClassData() const { return &_class_data_; }


void GetBlockByUtxoAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBlockByUtxoAck*>(&to_msg);
  auto& from = static_cast<const GetBlockByUtxoAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetBlockByUtxoAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_addr().empty()) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (!from._internal_utxo().empty()) {
    _this->_internal_set_utxo(from._internal_utxo());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (!from._internal_block_raw().empty()) {
    _this->_internal_set_block_raw(from._internal_block_raw());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockByUtxoAck::CopyFrom(const GetBlockByUtxoAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetBlockByUtxoAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockByUtxoAck::IsInitialized() const {
  return true;
}

void GetBlockByUtxoAck::InternalSwap(GetBlockByUtxoAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.addr_, lhs_arena,
      &other->_impl_.addr_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.utxo_, lhs_arena,
      &other->_impl_.utxo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.block_raw_, lhs_arena,
      &other->_impl_.block_raw_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockByUtxoAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[19]);
}

// ===================================================================

class HashType::_Internal {
 public:
};

HashType::HashType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:HashType)
}
HashType::HashType(const HashType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HashType* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_){}
    , decltype(_impl_.block_raw_){}
    , decltype(_impl_.tx_or_block_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    _this->_impl_.hash_.Set(from._internal_hash(), 
      _this->GetArenaForAllocation());
  }
  _impl_.block_raw_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.block_raw_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_block_raw().empty()) {
    _this->_impl_.block_raw_.Set(from._internal_block_raw(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.tx_or_block_ = from._impl_.tx_or_block_;
  // @@protoc_insertion_point(copy_constructor:HashType)
}

inline void HashType::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_){}
    , decltype(_impl_.block_raw_){}
    , decltype(_impl_.tx_or_block_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.block_raw_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.block_raw_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HashType::~HashType() {
  // @@protoc_insertion_point(destructor:HashType)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HashType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hash_.Destroy();
  _impl_.block_raw_.Destroy();
}

void HashType::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HashType::Clear() {
// @@protoc_insertion_point(message_clear_start:HashType)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hash_.ClearToEmpty();
  _impl_.block_raw_.ClearToEmpty();
  _impl_.tx_or_block_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HashType::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string hash = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_hash();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "HashType.hash"));
        } else
          goto handle_unusual;
        continue;
      // bool tx_or_block = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.tx_or_block_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes block_raw = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_block_raw();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HashType::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HashType)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string hash = 1;
  if (!this->_internal_hash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "HashType.hash");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_hash(), target);
  }

  // bool tx_or_block = 2;
  if (this->_internal_tx_or_block() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_tx_or_block(), target);
  }

  // bytes block_raw = 3;
  if (!this->_internal_block_raw().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_block_raw(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HashType)
  return target;
}

size_t HashType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HashType)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hash = 1;
  if (!this->_internal_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // bytes block_raw = 3;
  if (!this->_internal_block_raw().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_block_raw());
  }

  // bool tx_or_block = 2;
  if (this->_internal_tx_or_block() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HashType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HashType::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HashType::GetClassData() const { return &_class_data_; }


void HashType::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HashType*>(&to_msg);
  auto& from = static_cast<const HashType&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:HashType)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (!from._internal_block_raw().empty()) {
    _this->_internal_set_block_raw(from._internal_block_raw());
  }
  if (from._internal_tx_or_block() != 0) {
    _this->_internal_set_tx_or_block(from._internal_tx_or_block());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HashType::CopyFrom(const HashType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HashType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HashType::IsInitialized() const {
  return true;
}

void HashType::InternalSwap(HashType* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.hash_, lhs_arena,
      &other->_impl_.hash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.block_raw_, lhs_arena,
      &other->_impl_.block_raw_, rhs_arena
  );
  swap(_impl_.tx_or_block_, other->_impl_.tx_or_block_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HashType::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[20]);
}

// ===================================================================

class GetBlockByHashReq::_Internal {
 public:
};

GetBlockByHashReq::GetBlockByHashReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:GetBlockByHashReq)
}
GetBlockByHashReq::GetBlockByHashReq(const GetBlockByHashReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBlockByHashReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.missinghashs_){from._impl_.missinghashs_}
    , decltype(_impl_.addr_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addr().empty()) {
    _this->_impl_.addr_.Set(from._internal_addr(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:GetBlockByHashReq)
}

inline void GetBlockByHashReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.missinghashs_){arena}
    , decltype(_impl_.addr_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBlockByHashReq::~GetBlockByHashReq() {
  // @@protoc_insertion_point(destructor:GetBlockByHashReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBlockByHashReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.missinghashs_.~RepeatedPtrField();
  _impl_.addr_.Destroy();
  _impl_.msg_id_.Destroy();
}

void GetBlockByHashReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBlockByHashReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GetBlockByHashReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.missinghashs_.Clear();
  _impl_.addr_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockByHashReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string addr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetBlockByHashReq.addr"));
        } else
          goto handle_unusual;
        continue;
      // repeated .HashType missingHashs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_missinghashs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetBlockByHashReq.msg_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlockByHashReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetBlockByHashReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string addr = 1;
  if (!this->_internal_addr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addr().data(), static_cast<int>(this->_internal_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetBlockByHashReq.addr");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_addr(), target);
  }

  // repeated .HashType missingHashs = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_missinghashs_size()); i < n; i++) {
    const auto& repfield = this->_internal_missinghashs(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetBlockByHashReq.msg_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetBlockByHashReq)
  return target;
}

size_t GetBlockByHashReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetBlockByHashReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HashType missingHashs = 2;
  total_size += 1UL * this->_internal_missinghashs_size();
  for (const auto& msg : this->_impl_.missinghashs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string addr = 1;
  if (!this->_internal_addr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addr());
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockByHashReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBlockByHashReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockByHashReq::GetClassData() const { return &_class_data_; }


void GetBlockByHashReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBlockByHashReq*>(&to_msg);
  auto& from = static_cast<const GetBlockByHashReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetBlockByHashReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.missinghashs_.MergeFrom(from._impl_.missinghashs_);
  if (!from._internal_addr().empty()) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockByHashReq::CopyFrom(const GetBlockByHashReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetBlockByHashReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockByHashReq::IsInitialized() const {
  return true;
}

void GetBlockByHashReq::InternalSwap(GetBlockByHashReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.missinghashs_.InternalSwap(&other->_impl_.missinghashs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.addr_, lhs_arena,
      &other->_impl_.addr_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockByHashReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[21]);
}

// ===================================================================

class GetBlockByHashAck::_Internal {
 public:
};

GetBlockByHashAck::GetBlockByHashAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:GetBlockByHashAck)
}
GetBlockByHashAck::GetBlockByHashAck(const GetBlockByHashAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetBlockByHashAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.blocks_){from._impl_.blocks_}
    , decltype(_impl_.addr_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_addr().empty()) {
    _this->_impl_.addr_.Set(from._internal_addr(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:GetBlockByHashAck)
}

inline void GetBlockByHashAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.blocks_){arena}
    , decltype(_impl_.addr_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.addr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.addr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetBlockByHashAck::~GetBlockByHashAck() {
  // @@protoc_insertion_point(destructor:GetBlockByHashAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetBlockByHashAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.blocks_.~RepeatedPtrField();
  _impl_.addr_.Destroy();
  _impl_.msg_id_.Destroy();
}

void GetBlockByHashAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetBlockByHashAck::Clear() {
// @@protoc_insertion_point(message_clear_start:GetBlockByHashAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blocks_.Clear();
  _impl_.addr_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetBlockByHashAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string addr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_addr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetBlockByHashAck.addr"));
        } else
          goto handle_unusual;
        continue;
      // repeated .HashType blocks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_blocks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetBlockByHashAck.msg_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetBlockByHashAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetBlockByHashAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string addr = 1;
  if (!this->_internal_addr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_addr().data(), static_cast<int>(this->_internal_addr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetBlockByHashAck.addr");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_addr(), target);
  }

  // repeated .HashType blocks = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_blocks_size()); i < n; i++) {
    const auto& repfield = this->_internal_blocks(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetBlockByHashAck.msg_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetBlockByHashAck)
  return target;
}

size_t GetBlockByHashAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetBlockByHashAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .HashType blocks = 2;
  total_size += 1UL * this->_internal_blocks_size();
  for (const auto& msg : this->_impl_.blocks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string addr = 1;
  if (!this->_internal_addr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_addr());
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetBlockByHashAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetBlockByHashAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetBlockByHashAck::GetClassData() const { return &_class_data_; }


void GetBlockByHashAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetBlockByHashAck*>(&to_msg);
  auto& from = static_cast<const GetBlockByHashAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetBlockByHashAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.blocks_.MergeFrom(from._impl_.blocks_);
  if (!from._internal_addr().empty()) {
    _this->_internal_set_addr(from._internal_addr());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetBlockByHashAck::CopyFrom(const GetBlockByHashAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetBlockByHashAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockByHashAck::IsInitialized() const {
  return true;
}

void GetBlockByHashAck::InternalSwap(GetBlockByHashAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.blocks_.InternalSwap(&other->_impl_.blocks_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.addr_, lhs_arena,
      &other->_impl_.addr_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetBlockByHashAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[22]);
}

// ===================================================================

class SyncNodeHashReq::_Internal {
 public:
};

SyncNodeHashReq::SyncNodeHashReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncNodeHashReq)
}
SyncNodeHashReq::SyncNodeHashReq(const SyncNodeHashReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncNodeHashReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:SyncNodeHashReq)
}

inline void SyncNodeHashReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncNodeHashReq::~SyncNodeHashReq() {
  // @@protoc_insertion_point(destructor:SyncNodeHashReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncNodeHashReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
}

void SyncNodeHashReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncNodeHashReq::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncNodeHashReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncNodeHashReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncNodeHashReq.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncNodeHashReq.msg_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncNodeHashReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncNodeHashReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncNodeHashReq.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncNodeHashReq.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncNodeHashReq)
  return target;
}

size_t SyncNodeHashReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncNodeHashReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncNodeHashReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncNodeHashReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncNodeHashReq::GetClassData() const { return &_class_data_; }


void SyncNodeHashReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncNodeHashReq*>(&to_msg);
  auto& from = static_cast<const SyncNodeHashReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncNodeHashReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncNodeHashReq::CopyFrom(const SyncNodeHashReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncNodeHashReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncNodeHashReq::IsInitialized() const {
  return true;
}

void SyncNodeHashReq::InternalSwap(SyncNodeHashReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncNodeHashReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[23]);
}

// ===================================================================

class SyncNodeHashAck::_Internal {
 public:
};

SyncNodeHashAck::SyncNodeHashAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:SyncNodeHashAck)
}
SyncNodeHashAck::SyncNodeHashAck(const SyncNodeHashAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SyncNodeHashAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.hash_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    _this->_impl_.hash_.Set(from._internal_hash(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:SyncNodeHashAck)
}

inline void SyncNodeHashAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.self_node_id_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.hash_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SyncNodeHashAck::~SyncNodeHashAck() {
  // @@protoc_insertion_point(destructor:SyncNodeHashAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SyncNodeHashAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.self_node_id_.Destroy();
  _impl_.msg_id_.Destroy();
  _impl_.hash_.Destroy();
}

void SyncNodeHashAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SyncNodeHashAck::Clear() {
// @@protoc_insertion_point(message_clear_start:SyncNodeHashAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.self_node_id_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _impl_.hash_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SyncNodeHashAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string self_node_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncNodeHashAck.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncNodeHashAck.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // string hash = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_hash();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SyncNodeHashAck.hash"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SyncNodeHashAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SyncNodeHashAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncNodeHashAck.self_node_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_self_node_id(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncNodeHashAck.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // string hash = 3;
  if (!this->_internal_hash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SyncNodeHashAck.hash");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_hash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SyncNodeHashAck)
  return target;
}

size_t SyncNodeHashAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SyncNodeHashAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string self_node_id = 1;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // string hash = 3;
  if (!this->_internal_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SyncNodeHashAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SyncNodeHashAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SyncNodeHashAck::GetClassData() const { return &_class_data_; }


void SyncNodeHashAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SyncNodeHashAck*>(&to_msg);
  auto& from = static_cast<const SyncNodeHashAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SyncNodeHashAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SyncNodeHashAck::CopyFrom(const SyncNodeHashAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SyncNodeHashAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncNodeHashAck::IsInitialized() const {
  return true;
}

void SyncNodeHashAck::InternalSwap(SyncNodeHashAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.hash_, lhs_arena,
      &other->_impl_.hash_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SyncNodeHashAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[24]);
}

// ===================================================================

class GetCheckSumHashReq::_Internal {
 public:
};

GetCheckSumHashReq::GetCheckSumHashReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:GetCheckSumHashReq)
}
GetCheckSumHashReq::GetCheckSumHashReq(const GetCheckSumHashReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCheckSumHashReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_id_){}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.height_ = from._impl_.height_;
  // @@protoc_insertion_point(copy_constructor:GetCheckSumHashReq)
}

inline void GetCheckSumHashReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_id_){}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.height_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCheckSumHashReq::~GetCheckSumHashReq() {
  // @@protoc_insertion_point(destructor:GetCheckSumHashReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCheckSumHashReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_id_.Destroy();
  _impl_.self_node_id_.Destroy();
}

void GetCheckSumHashReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCheckSumHashReq::Clear() {
// @@protoc_insertion_point(message_clear_start:GetCheckSumHashReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_id_.ClearToEmpty();
  _impl_.self_node_id_.ClearToEmpty();
  _impl_.height_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCheckSumHashReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetCheckSumHashReq.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // string self_node_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetCheckSumHashReq.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCheckSumHashReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetCheckSumHashReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 height = 1;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_height(), target);
  }

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetCheckSumHashReq.msg_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg_id(), target);
  }

  // string self_node_id = 3;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetCheckSumHashReq.self_node_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_self_node_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetCheckSumHashReq)
  return target;
}

size_t GetCheckSumHashReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetCheckSumHashReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg_id = 2;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // string self_node_id = 3;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // uint64 height = 1;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCheckSumHashReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCheckSumHashReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCheckSumHashReq::GetClassData() const { return &_class_data_; }


void GetCheckSumHashReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCheckSumHashReq*>(&to_msg);
  auto& from = static_cast<const GetCheckSumHashReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetCheckSumHashReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCheckSumHashReq::CopyFrom(const GetCheckSumHashReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetCheckSumHashReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCheckSumHashReq::IsInitialized() const {
  return true;
}

void GetCheckSumHashReq::InternalSwap(GetCheckSumHashReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  swap(_impl_.height_, other->_impl_.height_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCheckSumHashReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[25]);
}

// ===================================================================

class GetCheckSumHashAck::_Internal {
 public:
};

GetCheckSumHashAck::GetCheckSumHashAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:GetCheckSumHashAck)
}
GetCheckSumHashAck::GetCheckSumHashAck(const GetCheckSumHashAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCheckSumHashAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.height_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hash().empty()) {
    _this->_impl_.hash_.Set(from._internal_hash(), 
      _this->GetArenaForAllocation());
  }
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_id().empty()) {
    _this->_impl_.msg_id_.Set(from._internal_msg_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_self_node_id().empty()) {
    _this->_impl_.self_node_id_.Set(from._internal_self_node_id(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.height_, &from._impl_.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.success_) -
    reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.success_));
  // @@protoc_insertion_point(copy_constructor:GetCheckSumHashAck)
}

inline void GetCheckSumHashAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.hash_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.self_node_id_){}
    , decltype(_impl_.height_){uint64_t{0u}}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.hash_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hash_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.msg_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.self_node_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.self_node_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCheckSumHashAck::~GetCheckSumHashAck() {
  // @@protoc_insertion_point(destructor:GetCheckSumHashAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCheckSumHashAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.hash_.Destroy();
  _impl_.msg_id_.Destroy();
  _impl_.self_node_id_.Destroy();
}

void GetCheckSumHashAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCheckSumHashAck::Clear() {
// @@protoc_insertion_point(message_clear_start:GetCheckSumHashAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hash_.ClearToEmpty();
  _impl_.msg_id_.ClearToEmpty();
  _impl_.self_node_id_.ClearToEmpty();
  ::memset(&_impl_.height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.success_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.success_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCheckSumHashAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 height = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string hash = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_hash();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetCheckSumHashAck.hash"));
        } else
          goto handle_unusual;
        continue;
      // string msg_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetCheckSumHashAck.msg_id"));
        } else
          goto handle_unusual;
        continue;
      // bool success = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string self_node_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_self_node_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetCheckSumHashAck.self_node_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCheckSumHashAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetCheckSumHashAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 height = 1;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_height(), target);
  }

  // string hash = 2;
  if (!this->_internal_hash().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetCheckSumHashAck.hash");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_hash(), target);
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_id().data(), static_cast<int>(this->_internal_msg_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetCheckSumHashAck.msg_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg_id(), target);
  }

  // bool success = 4;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_success(), target);
  }

  // string self_node_id = 5;
  if (!this->_internal_self_node_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_self_node_id().data(), static_cast<int>(this->_internal_self_node_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetCheckSumHashAck.self_node_id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_self_node_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetCheckSumHashAck)
  return target;
}

size_t GetCheckSumHashAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetCheckSumHashAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string hash = 2;
  if (!this->_internal_hash().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // string msg_id = 3;
  if (!this->_internal_msg_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_id());
  }

  // string self_node_id = 5;
  if (!this->_internal_self_node_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_self_node_id());
  }

  // uint64 height = 1;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_height());
  }

  // bool success = 4;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCheckSumHashAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCheckSumHashAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCheckSumHashAck::GetClassData() const { return &_class_data_; }


void GetCheckSumHashAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCheckSumHashAck*>(&to_msg);
  auto& from = static_cast<const GetCheckSumHashAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetCheckSumHashAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (!from._internal_msg_id().empty()) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (!from._internal_self_node_id().empty()) {
    _this->_internal_set_self_node_id(from._internal_self_node_id());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCheckSumHashAck::CopyFrom(const GetCheckSumHashAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetCheckSumHashAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCheckSumHashAck::IsInitialized() const {
  return true;
}

void GetCheckSumHashAck::InternalSwap(GetCheckSumHashAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.hash_, lhs_arena,
      &other->_impl_.hash_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_id_, lhs_arena,
      &other->_impl_.msg_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.self_node_id_, lhs_arena,
      &other->_impl_.self_node_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetCheckSumHashAck, _impl_.success_)
      + sizeof(GetCheckSumHashAck::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(GetCheckSumHashAck, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCheckSumHashAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_sync_5fblock_2eproto_getter, &descriptor_table_sync_5fblock_2eproto_once,
      file_level_metadata_sync_5fblock_2eproto[26]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::FastSyncGetHashReq*
Arena::CreateMaybeMessage< ::FastSyncGetHashReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FastSyncGetHashReq >(arena);
}
template<> PROTOBUF_NOINLINE ::FastSyncBlockHashs*
Arena::CreateMaybeMessage< ::FastSyncBlockHashs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FastSyncBlockHashs >(arena);
}
template<> PROTOBUF_NOINLINE ::FastSyncGetHashAck*
Arena::CreateMaybeMessage< ::FastSyncGetHashAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FastSyncGetHashAck >(arena);
}
template<> PROTOBUF_NOINLINE ::FastSyncGetBlockReq*
Arena::CreateMaybeMessage< ::FastSyncGetBlockReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FastSyncGetBlockReq >(arena);
}
template<> PROTOBUF_NOINLINE ::FastSyncBlock*
Arena::CreateMaybeMessage< ::FastSyncBlock >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FastSyncBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::FastSyncGetBlockAck*
Arena::CreateMaybeMessage< ::FastSyncGetBlockAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FastSyncGetBlockAck >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncGetSumHashReq*
Arena::CreateMaybeMessage< ::SyncGetSumHashReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncGetSumHashReq >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncSumHash*
Arena::CreateMaybeMessage< ::SyncSumHash >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncSumHash >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncGetSumHashAck*
Arena::CreateMaybeMessage< ::SyncGetSumHashAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncGetSumHashAck >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncGetHeightHashReq*
Arena::CreateMaybeMessage< ::SyncGetHeightHashReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncGetHeightHashReq >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncGetHeightHashAck*
Arena::CreateMaybeMessage< ::SyncGetHeightHashAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncGetHeightHashAck >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncGetBlockReq*
Arena::CreateMaybeMessage< ::SyncGetBlockReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncGetBlockReq >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncGetBlockAck*
Arena::CreateMaybeMessage< ::SyncGetBlockAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncGetBlockAck >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncFromZeroSumHash*
Arena::CreateMaybeMessage< ::SyncFromZeroSumHash >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncFromZeroSumHash >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncFromZeroGetSumHashReq*
Arena::CreateMaybeMessage< ::SyncFromZeroGetSumHashReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncFromZeroGetSumHashReq >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncFromZeroGetSumHashAck*
Arena::CreateMaybeMessage< ::SyncFromZeroGetSumHashAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncFromZeroGetSumHashAck >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncFromZeroGetBlockReq*
Arena::CreateMaybeMessage< ::SyncFromZeroGetBlockReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncFromZeroGetBlockReq >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncFromZeroGetBlockAck*
Arena::CreateMaybeMessage< ::SyncFromZeroGetBlockAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncFromZeroGetBlockAck >(arena);
}
template<> PROTOBUF_NOINLINE ::GetBlockByUtxoReq*
Arena::CreateMaybeMessage< ::GetBlockByUtxoReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetBlockByUtxoReq >(arena);
}
template<> PROTOBUF_NOINLINE ::GetBlockByUtxoAck*
Arena::CreateMaybeMessage< ::GetBlockByUtxoAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetBlockByUtxoAck >(arena);
}
template<> PROTOBUF_NOINLINE ::HashType*
Arena::CreateMaybeMessage< ::HashType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HashType >(arena);
}
template<> PROTOBUF_NOINLINE ::GetBlockByHashReq*
Arena::CreateMaybeMessage< ::GetBlockByHashReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetBlockByHashReq >(arena);
}
template<> PROTOBUF_NOINLINE ::GetBlockByHashAck*
Arena::CreateMaybeMessage< ::GetBlockByHashAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetBlockByHashAck >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncNodeHashReq*
Arena::CreateMaybeMessage< ::SyncNodeHashReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncNodeHashReq >(arena);
}
template<> PROTOBUF_NOINLINE ::SyncNodeHashAck*
Arena::CreateMaybeMessage< ::SyncNodeHashAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SyncNodeHashAck >(arena);
}
template<> PROTOBUF_NOINLINE ::GetCheckSumHashReq*
Arena::CreateMaybeMessage< ::GetCheckSumHashReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetCheckSumHashReq >(arena);
}
template<> PROTOBUF_NOINLINE ::GetCheckSumHashAck*
Arena::CreateMaybeMessage< ::GetCheckSumHashAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetCheckSumHashAck >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
